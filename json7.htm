Version:0.9
StartHTML:0000000105
EndHTML:0000209763
StartFragment:0000001053
EndFragment:0000209747
<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>mXScriptasHTML</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="generator" content="SynEdit HTML exporter" />
<style type="text/css">
<!--
body { color: #000000; background-color: #FFFFFF; }
.pas1-assembler { }
.pas1-character { color: #0066CC; text-decoration: underline; }
.pas1-comment { color: #000080; font-style: italic; }
.pas1-float { color: #FF6347; }
.pas1-hexadecimal { color: #FF00FF; }
.pas1-identifier { }
.pas1-number { color: #FF0000; }
.pas1-preprocessor { font-style: italic; }
.pas1-reservedword { color: #000000; font-weight: bold; }
.pas1-space { }
.pas1-string { color: #008080; }
.pas1-symbol { color: #800080; }
-->
</style>
</head>
<body>
<!--StartFragment--><pre><code><span class="pas1-comment">//****************API AGSI Iterate Tester**************************
</span><span class="pas1-reservedword">program</span><span class="pas1-space"> Rapid_API_AGSI_Get_Post1_plus14</span><span class="pas1-symbol">;

</span><span class="pas1-comment">//https://www.techtarget.com/searchapparchitecture/definition/OpenAPI-Specification
//https://agsi.gie.eu/api
//https://rapidapi.com/maxkleiner1/api/maxbox4/tutorials
//based on json data on ct.de/y47m
//#TODO: right axis full [%]  done - changed full from int2double      
//https://github.com/maxkleiner/agsi-data for the BPM report

</span><span class="pas1-space">        
</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> X_Rapidapi_Key </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'df61a35825msh66c95e953a7ap192bcfjsn16a_________'</span><span class="pas1-symbol">;</span><span class="pas1-space"> 
  SUserAgent </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'Mozilla/5.001 (windows; U; NT4.0; en-US; rv:1.0) Gecko/25250101'</span><span class="pas1-symbol">;
</span><span class="pas1-space">  USERAGENTE </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:104.0) Gecko/20100101 Firefox/104.0'</span><span class="pas1-symbol">;
</span><span class="pas1-space">  URLMALWARE </span><span class="pas1-symbol">=</span><span class="pas1-string">'http://malware.testing.google.test/testing/malware/'</span><span class="pas1-symbol">;</span><span class="pas1-space"> 
       
</span><span class="pas1-comment">//'http://chart.apis.google.com/chart?chs=%dx%d&amp;cht=qr&amp;chld=%s&amp;chl=%s';
//Const /search?term=kiss%20the%20rain&amp;locale=en-US&amp;offset=0&amp;limit=5 HTTP/1.1

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> Form_CloseClick</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Sender</span><span class="pas1-symbol">:</span><span class="pas1-space"> TObject</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-reservedword">var</span><span class="pas1-space"> action</span><span class="pas1-symbol">:</span><span class="pas1-space"> TCloseAction</span><span class="pas1-symbol">);</span><span class="pas1-space"> </span><span class="pas1-reservedword">forward</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">Const</span><span class="pas1-space"> PYHOME32 </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'C:\Users\max\AppData\Local\Programs\Python\Python36-32\'</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> getURLScanAPI_Python</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ftopic</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">);</span><span class="pas1-space"> 
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  </span><span class="pas1-reservedword">with</span><span class="pas1-space"> TPythonEngine</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">Nil</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    pythonhome</span><span class="pas1-symbol">:=</span><span class="pas1-space"> PYHOME32</span><span class="pas1-symbol">;
</span><span class="pas1-space">    loadDLL</span><span class="pas1-symbol">();
</span><span class="pas1-space">    </span><span class="pas1-reservedword">try
</span><span class="pas1-space">      Execstring</span><span class="pas1-symbol">(</span><span class="pas1-string">'import urllib.request, json, requests'</span><span class="pas1-symbol">);</span><span class="pas1-space"> 
      ExecStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'headers={&quot;Content-Type&quot;:&quot;application/json&quot;}'</span><span class="pas1-symbol">)
</span><span class="pas1-space">      ExecStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'data = {&quot;url&quot;: &quot;'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">ftopic</span><span class="pas1-symbol">+</span><span class="pas1-string">'&quot;, &quot;visibility&quot;: &quot;public&quot;}'</span><span class="pas1-symbol">)
</span><span class="pas1-space">      ExecStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'resp = requests.post(&quot;https://urlscan.io/api/v1/scan/&quot;,headers=headers, '</span><span class="pas1-symbol">+
</span><span class="pas1-space">                                                </span><span class="pas1-string">'data=json.dumps(data))'</span><span class="pas1-symbol">);
</span><span class="pas1-space">      Print</span><span class="pas1-symbol">(</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'resp'</span><span class="pas1-symbol">));
</span><span class="pas1-space">      print</span><span class="pas1-symbol">(</span><span class="pas1-identifier">EvalStr</span><span class="pas1-symbol">(</span><span class="pas1-string">'resp.json()'</span><span class="pas1-symbol">));
</span><span class="pas1-space">    </span><span class="pas1-reservedword">except
</span><span class="pas1-space">      raiseError</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">finally
</span><span class="pas1-space">      </span><span class="pas1-comment">//unloadDll;
</span><span class="pas1-space">      Free</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space">    
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;


</span><span class="pas1-reservedword">Const</span><span class="pas1-space">  </span><span class="pas1-comment">//please get your api key first: https://agsi.gie.eu/account
</span><span class="pas1-space"> AGSI_APIKEY</span><span class="pas1-symbol">=</span><span class="pas1-string">'16600670617ff72de59403f2a4bbb92f'</span><span class="pas1-symbol">;</span><span class="pas1-space">      
 URL_AGSIAPI</span><span class="pas1-symbol">=</span><span class="pas1-string">'https://agsi.gie.eu/api?country=%s&amp;from=%s&amp;size=%s&amp;x-key:%s'</span><span class="pas1-symbol">;</span><span class="pas1-space">  
 URL_AGSIAPI2</span><span class="pas1-symbol">=</span><span class="pas1-string">'https://agsi.gie.eu/api?country=%s&amp;from=%s&amp;size=%s'</span><span class="pas1-symbol">;</span><span class="pas1-space">    

</span><span class="pas1-reservedword">function</span><span class="pas1-space"> GetEnergyStreamJSON</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> Data</span><span class="pas1-symbol">,</span><span class="pas1-space"> APIKEY</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">):</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> encodURL</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-space">    mapStrm</span><span class="pas1-symbol">:</span><span class="pas1-space"> TStringStream</span><span class="pas1-symbol">;
</span><span class="pas1-space">    jo</span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONObject</span><span class="pas1-symbol">;</span><span class="pas1-space">  asp</span><span class="pas1-symbol">:</span><span class="pas1-space"> TStringArray</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  asp</span><span class="pas1-symbol">:=</span><span class="pas1-space"> splitstr</span><span class="pas1-symbol">(</span><span class="pas1-identifier">data</span><span class="pas1-symbol">,</span><span class="pas1-string">','</span><span class="pas1-symbol">);
</span><span class="pas1-space">  encodURL</span><span class="pas1-symbol">:=</span><span class="pas1-space"> Format</span><span class="pas1-symbol">(</span><span class="pas1-identifier">URL_AGSIAPI</span><span class="pas1-symbol">,[</span><span class="pas1-identifier">HTTPEncode</span><span class="pas1-symbol">(</span><span class="pas1-identifier">asp</span><span class="pas1-symbol">[</span><span class="pas1-number">0</span><span class="pas1-symbol">]),</span><span class="pas1-identifier">asp</span><span class="pas1-symbol">[</span><span class="pas1-number">1</span><span class="pas1-symbol">],</span><span class="pas1-identifier">asp</span><span class="pas1-symbol">[</span><span class="pas1-number">2</span><span class="pas1-symbol">],</span><span class="pas1-identifier">APIKEY</span><span class="pas1-symbol">]);</span><span class="pas1-space"> 
  writeln</span><span class="pas1-symbol">(</span><span class="pas1-identifier">encodURL</span><span class="pas1-symbol">)</span><span class="pas1-space">        
  mapStrm</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TStringStream</span><span class="pas1-symbol">.</span><span class="pas1-identifier">create</span><span class="pas1-symbol">(</span><span class="pas1-string">''</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-reservedword">try
</span><span class="pas1-space">    HttpGet</span><span class="pas1-symbol">(</span><span class="pas1-identifier">EncodURL</span><span class="pas1-symbol">,</span><span class="pas1-space"> mapStrm</span><span class="pas1-symbol">);</span><span class="pas1-space">  </span><span class="pas1-comment">//WinInet
</span><span class="pas1-space">    mapStrm</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Position</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">;
</span><span class="pas1-space">    jo</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TJSONObject</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create4</span><span class="pas1-symbol">(</span><span class="pas1-identifier">mapStrm</span><span class="pas1-symbol">.</span><span class="pas1-identifier">datastring</span><span class="pas1-symbol">);
</span><span class="pas1-space">    writeln</span><span class="pas1-symbol">(</span><span class="pas1-identifier">jo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">getstring</span><span class="pas1-symbol">(</span><span class="pas1-string">'data'</span><span class="pas1-symbol">));
</span><span class="pas1-space">    result</span><span class="pas1-symbol">:=</span><span class="pas1-space"> jo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">getjsonarray</span><span class="pas1-symbol">(</span><span class="pas1-string">'data'</span><span class="pas1-symbol">).</span><span class="pas1-identifier">getjsonobject</span><span class="pas1-symbol">(</span><span class="pas1-number">0</span><span class="pas1-symbol">).</span><span class="pas1-identifier">getstring</span><span class="pas1-symbol">(</span><span class="pas1-string">'name'</span><span class="pas1-symbol">);
</span><span class="pas1-space">    result</span><span class="pas1-symbol">:=</span><span class="pas1-space"> result</span><span class="pas1-symbol">+</span><span class="pas1-string">' '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">jo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">getjsonobject</span><span class="pas1-symbol">(</span><span class="pas1-string">'full'</span><span class="pas1-symbol">).</span><span class="pas1-identifier">getstring</span><span class="pas1-symbol">(</span><span class="pas1-string">'full'</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-reservedword">except</span><span class="pas1-space">  
    writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'Error: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">mapstrm</span><span class="pas1-symbol">.</span><span class="pas1-identifier">datastring</span><span class="pas1-symbol">);
</span><span class="pas1-space">    writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'E: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">ExceptiontoString</span><span class="pas1-symbol">(</span><span class="pas1-identifier">exceptiontype</span><span class="pas1-symbol">,</span><span class="pas1-space"> exceptionparam</span><span class="pas1-symbol">));</span><span class="pas1-space">   
  </span><span class="pas1-reservedword">finally
</span><span class="pas1-space">    mapStrm</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Free</span><span class="pas1-symbol">;</span><span class="pas1-space">                                 
    encodURL</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-string">''</span><span class="pas1-symbol">;
</span><span class="pas1-space">    jo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Free</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-comment">// data plot functions--------------------------------------------------------//
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> plotform</span><span class="pas1-symbol">:</span><span class="pas1-space"> TForm</span><span class="pas1-symbol">;</span><span class="pas1-space">  

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> Form_CloseClick</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Sender</span><span class="pas1-symbol">:</span><span class="pas1-space"> TObject</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-reservedword">var</span><span class="pas1-space"> action</span><span class="pas1-symbol">:</span><span class="pas1-space"> TCloseAction</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    </span><span class="pas1-comment">//afrm.Close;
</span><span class="pas1-space">    action</span><span class="pas1-symbol">:=</span><span class="pas1-space"> cafree</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-comment">//chart1.Free;
</span><span class="pas1-space">    writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'EPlotform closed at: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">datetimetostr</span><span class="pas1-symbol">(</span><span class="pas1-identifier">now</span><span class="pas1-symbol">));
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-comment">//http://www.teechart.net/docs/teechart/vclfmx/lib/html/TBarSeries.html  
</span><span class="pas1-reservedword">function</span><span class="pas1-space"> ChartInjector</span><span class="pas1-symbol">(</span><span class="pas1-identifier">aform</span><span class="pas1-symbol">:</span><span class="pas1-space"> Tform</span><span class="pas1-symbol">):</span><span class="pas1-space"> TChart</span><span class="pas1-symbol">;</span><span class="pas1-space"> 
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> Ser1</span><span class="pas1-symbol">:</span><span class="pas1-space"> TBarSeries</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//TPieSeries, TFastLineSeries; 
</span><span class="pas1-space">    ser2</span><span class="pas1-symbol">,</span><span class="pas1-space"> ser3</span><span class="pas1-symbol">:</span><span class="pas1-space"> TLineSeries</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  result</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TChart</span><span class="pas1-symbol">.</span><span class="pas1-identifier">create</span><span class="pas1-symbol">(</span><span class="pas1-identifier">aform</span><span class="pas1-symbol">)</span><span class="pas1-space"> 
  </span><span class="pas1-reservedword">with</span><span class="pas1-space"> result </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    parent</span><span class="pas1-symbol">:=</span><span class="pas1-space"> aform</span><span class="pas1-symbol">;
</span><span class="pas1-space">    align</span><span class="pas1-symbol">:=</span><span class="pas1-space"> alClient</span><span class="pas1-symbol">;
</span><span class="pas1-space">    Title</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Text</span><span class="pas1-symbol">.</span><span class="pas1-identifier">add</span><span class="pas1-symbol">(</span><span class="pas1-string">'Sciplot: '</span><span class="pas1-symbol">+</span><span class="pas1-string">'GAS Injection / Full / Withdraw DE 2022 &Oslash;'</span><span class="pas1-symbol">);
</span><span class="pas1-space">    LeftAxis</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Title</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Caption</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-string">'Injection GWh/d Amount'</span><span class="pas1-symbol">;
</span><span class="pas1-space">    RightAxis</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Title</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Caption</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-string">'Fulls in [%]'</span><span class="pas1-symbol">;
</span><span class="pas1-space">    Title</span><span class="pas1-symbol">.</span><span class="pas1-identifier">font</span><span class="pas1-symbol">.</span><span class="pas1-identifier">size</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-number">15</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-comment">//canvas
</span><span class="pas1-space">    Ser1</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TBarSeries</span><span class="pas1-symbol">.</span><span class="pas1-identifier">create</span><span class="pas1-symbol">(</span><span class="pas1-identifier">result</span><span class="pas1-symbol">);</span><span class="pas1-space"> </span><span class="pas1-comment">// TPieSeries
</span><span class="pas1-space">    ser1</span><span class="pas1-symbol">.</span><span class="pas1-identifier">parentchart</span><span class="pas1-symbol">:=</span><span class="pas1-space"> result</span><span class="pas1-symbol">;
</span><span class="pas1-space">    ser1</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Marks</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Visible </span><span class="pas1-symbol">:=</span><span class="pas1-space"> False
    </span><span class="pas1-comment">//serUllage.VertAxis := aRightAxis;
</span><span class="pas1-space">    Legend</span><span class="pas1-symbol">.</span><span class="pas1-identifier">CheckBoxes</span><span class="pas1-symbol">:=</span><span class="pas1-space"> True</span><span class="pas1-symbol">;
</span><span class="pas1-space">    RightAxis</span><span class="pas1-symbol">.</span><span class="pas1-identifier">SetMinMax</span><span class="pas1-symbol">(</span><span class="pas1-number">0</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">100</span><span class="pas1-symbol">);
</span><span class="pas1-space">    LeftAxis</span><span class="pas1-symbol">.</span><span class="pas1-identifier">SetMinMax</span><span class="pas1-symbol">(</span><span class="pas1-number">0</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">2000</span><span class="pas1-symbol">);
</span><span class="pas1-space">    ser1</span><span class="pas1-symbol">.</span><span class="pas1-identifier">SeriesColor</span><span class="pas1-symbol">:=</span><span class="pas1-space"> clGreen</span><span class="pas1-symbol">;
</span><span class="pas1-space">    Ser1</span><span class="pas1-symbol">.</span><span class="pas1-identifier">ShowInLegend</span><span class="pas1-symbol">:=</span><span class="pas1-space"> True</span><span class="pas1-symbol">;
</span><span class="pas1-space">    ser1</span><span class="pas1-symbol">.</span><span class="pas1-identifier">title</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-string">'Injects'
</span><span class="pas1-space">    Ser2</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TLineSeries</span><span class="pas1-symbol">.</span><span class="pas1-identifier">create</span><span class="pas1-symbol">(</span><span class="pas1-identifier">result</span><span class="pas1-symbol">);</span><span class="pas1-space"> 
    ser2</span><span class="pas1-symbol">.</span><span class="pas1-identifier">VertAxis </span><span class="pas1-symbol">:=</span><span class="pas1-space"> aRightAxis</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-comment">//ser2.axis.automatic := 0;
</span><span class="pas1-space">    ser2</span><span class="pas1-symbol">.</span><span class="pas1-identifier">parentchart</span><span class="pas1-symbol">:=</span><span class="pas1-space"> result</span><span class="pas1-symbol">;
</span><span class="pas1-space">    ser2</span><span class="pas1-symbol">.</span><span class="pas1-identifier">SeriesColor</span><span class="pas1-symbol">:=</span><span class="pas1-space"> clRed</span><span class="pas1-symbol">;
</span><span class="pas1-space">    ser2</span><span class="pas1-symbol">.</span><span class="pas1-identifier">title</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-string">'Full [%]'
</span><span class="pas1-space">    Ser3</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TLineSeries</span><span class="pas1-symbol">.</span><span class="pas1-identifier">create</span><span class="pas1-symbol">(</span><span class="pas1-identifier">result</span><span class="pas1-symbol">);</span><span class="pas1-space"> 
    </span><span class="pas1-comment">//ser2.VertAxis := aRightAxis;
</span><span class="pas1-space">    </span><span class="pas1-comment">//ser2.axis.automatic := 0;
</span><span class="pas1-space">    ser3</span><span class="pas1-symbol">.</span><span class="pas1-identifier">parentchart</span><span class="pas1-symbol">:=</span><span class="pas1-space"> result</span><span class="pas1-symbol">;
</span><span class="pas1-space">    ser3</span><span class="pas1-symbol">.</span><span class="pas1-identifier">SeriesColor</span><span class="pas1-symbol">:=</span><span class="pas1-space"> clyellow</span><span class="pas1-symbol">;
</span><span class="pas1-space">    ser3</span><span class="pas1-symbol">.</span><span class="pas1-identifier">title</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-string">'Wd.GWh'
</span><span class="pas1-space">    </span><span class="pas1-comment">//ser2.YValues.Multiplier:= 100;
</span><span class="pas1-space">    View3D </span><span class="pas1-symbol">:=</span><span class="pas1-space"> False</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-comment">//Axes.Bottom.DateTimeFormat:= 'dd/mmm/yy';
</span><span class="pas1-space">    </span><span class="pas1-comment">//Free;
</span><span class="pas1-space">    </span><span class="pas1-comment">//muPixels muPercent
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space">  
  </span><span class="pas1-comment">//TFourPoints
</span><span class="pas1-space">  </span><span class="pas1-comment">//RectToFourPoints 
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space"> 

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> JSON2Plot</span><span class="pas1-symbol">(</span><span class="pas1-identifier">form1</span><span class="pas1-symbol">:</span><span class="pas1-space"> TForm</span><span class="pas1-symbol">;</span><span class="pas1-space"> jar</span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONArray</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> chart1</span><span class="pas1-symbol">:</span><span class="pas1-space"> TChart</span><span class="pas1-symbol">;</span><span class="pas1-space">  
    cnt</span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">;</span><span class="pas1-space"> sumup</span><span class="pas1-symbol">,</span><span class="pas1-identifier">tmp2</span><span class="pas1-symbol">,</span><span class="pas1-identifier">tmp</span><span class="pas1-symbol">:</span><span class="pas1-space"> double</span><span class="pas1-symbol">;</span><span class="pas1-space"> gday</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  form1</span><span class="pas1-symbol">.</span><span class="pas1-identifier">onclose</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-symbol">@</span><span class="pas1-identifier">Form_CloseClick</span><span class="pas1-symbol">;
</span><span class="pas1-space">  chart1</span><span class="pas1-symbol">:=</span><span class="pas1-space"> ChartInjector</span><span class="pas1-symbol">(</span><span class="pas1-identifier">form1</span><span class="pas1-symbol">);</span><span class="pas1-space"> 
  sumup</span><span class="pas1-symbol">:=</span><span class="pas1-number">0</span><span class="pas1-symbol">;</span><span class="pas1-space"> tmp2</span><span class="pas1-symbol">:=</span><span class="pas1-number">0</span><span class="pas1-symbol">;</span><span class="pas1-space"> tmp</span><span class="pas1-symbol">:=</span><span class="pas1-number">0</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">try
</span><span class="pas1-space">   </span><span class="pas1-reservedword">for</span><span class="pas1-space"> cnt</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> jar</span><span class="pas1-symbol">.</span><span class="pas1-identifier">length</span><span class="pas1-symbol">-</span><span class="pas1-number">1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">     </span><span class="pas1-comment">//writeln(locate.getjsonobject(it).getstring('gasDayStart')+':'+
</span><span class="pas1-space">     tmp</span><span class="pas1-symbol">:=</span><span class="pas1-space"> jar</span><span class="pas1-symbol">.</span><span class="pas1-identifier">getjsonobject</span><span class="pas1-symbol">(</span><span class="pas1-identifier">jar</span><span class="pas1-symbol">.</span><span class="pas1-identifier">length</span><span class="pas1-symbol">-</span><span class="pas1-number">1</span><span class="pas1-symbol">-</span><span class="pas1-identifier">cnt</span><span class="pas1-symbol">).</span><span class="pas1-identifier">getdouble</span><span class="pas1-symbol">(</span><span class="pas1-string">'injection'</span><span class="pas1-symbol">);</span><span class="pas1-space"> 
     tmp2</span><span class="pas1-symbol">:=</span><span class="pas1-space"> jar</span><span class="pas1-symbol">.</span><span class="pas1-identifier">getjsonobject</span><span class="pas1-symbol">(</span><span class="pas1-identifier">jar</span><span class="pas1-symbol">.</span><span class="pas1-identifier">length</span><span class="pas1-symbol">-</span><span class="pas1-number">1</span><span class="pas1-symbol">-</span><span class="pas1-identifier">cnt</span><span class="pas1-symbol">).</span><span class="pas1-identifier">getdouble</span><span class="pas1-symbol">(</span><span class="pas1-string">'full'</span><span class="pas1-symbol">);</span><span class="pas1-space"> 
     sumup</span><span class="pas1-symbol">:=</span><span class="pas1-space"> sumup</span><span class="pas1-symbol">+</span><span class="pas1-identifier">tmp</span><span class="pas1-symbol">;
</span><span class="pas1-space">     gday</span><span class="pas1-symbol">:=</span><span class="pas1-space"> jar</span><span class="pas1-symbol">.</span><span class="pas1-identifier">getjsonobject</span><span class="pas1-symbol">(</span><span class="pas1-identifier">jar</span><span class="pas1-symbol">.</span><span class="pas1-identifier">length</span><span class="pas1-symbol">-</span><span class="pas1-number">1</span><span class="pas1-symbol">-</span><span class="pas1-identifier">cnt</span><span class="pas1-symbol">).</span><span class="pas1-identifier">getstring</span><span class="pas1-symbol">(</span><span class="pas1-string">'gasDayStart'</span><span class="pas1-symbol">);
</span><span class="pas1-space">     chart1</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Series</span><span class="pas1-symbol">[</span><span class="pas1-number">0</span><span class="pas1-symbol">].</span><span class="pas1-identifier">Addxy</span><span class="pas1-symbol">(</span><span class="pas1-identifier">cnt</span><span class="pas1-symbol">,</span><span class="pas1-identifier">tmp</span><span class="pas1-symbol">,</span><span class="pas1-identifier">gday</span><span class="pas1-symbol">,</span><span class="pas1-identifier">clgreen</span><span class="pas1-symbol">);
</span><span class="pas1-space">     chart1</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Series</span><span class="pas1-symbol">[</span><span class="pas1-number">1</span><span class="pas1-symbol">].</span><span class="pas1-identifier">Addxy</span><span class="pas1-symbol">(</span><span class="pas1-identifier">cnt</span><span class="pas1-symbol">,</span><span class="pas1-identifier">tmp2</span><span class="pas1-symbol">,</span><span class="pas1-string">''</span><span class="pas1-symbol">,</span><span class="pas1-identifier">clred</span><span class="pas1-symbol">);
</span><span class="pas1-space">     chart1</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Series</span><span class="pas1-symbol">[</span><span class="pas1-number">2</span><span class="pas1-symbol">].</span><span class="pas1-identifier">Addxy</span><span class="pas1-symbol">(</span><span class="pas1-identifier">cnt</span><span class="pas1-symbol">,</span><span class="pas1-identifier">jar</span><span class="pas1-symbol">.</span><span class="pas1-identifier">getjsonobject</span><span class="pas1-symbol">(</span><span class="pas1-identifier">jar</span><span class="pas1-symbol">.</span><span class="pas1-identifier">length</span><span class="pas1-symbol">-</span><span class="pas1-number">1</span><span class="pas1-symbol">-</span><span class="pas1-identifier">cnt</span><span class="pas1-symbol">).</span><span class="pas1-identifier">getdouble</span><span class="pas1-symbol">(</span><span class="pas1-string">'withdrawal'</span><span class="pas1-symbol">),</span><span class="pas1-string">''</span><span class="pas1-symbol">,</span><span class="pas1-identifier">clyellow</span><span class="pas1-symbol">);
</span><span class="pas1-space">   </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">except
</span><span class="pas1-space">    writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'EPlot: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">ExceptiontoString</span><span class="pas1-symbol">(</span><span class="pas1-identifier">exceptiontype</span><span class="pas1-symbol">,</span><span class="pas1-space"> exceptionparam</span><span class="pas1-symbol">));
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space">   
 PrintF</span><span class="pas1-symbol">(</span><span class="pas1-string">' Landrange %d: Injection sum: %.2f'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-symbol">[</span><span class="pas1-identifier">jar</span><span class="pas1-symbol">.</span><span class="pas1-identifier">length</span><span class="pas1-symbol">-</span><span class="pas1-number">1</span><span class="pas1-symbol">,</span><span class="pas1-space"> sumup</span><span class="pas1-symbol">]);
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space"> 

</span><span class="pas1-reservedword">function</span><span class="pas1-space"> letGenerateJSON2</span><span class="pas1-symbol">(</span><span class="pas1-identifier">HttpRqresponseText</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">):</span><span class="pas1-space"> TJSONArray</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> jo</span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONObject</span><span class="pas1-symbol">;</span><span class="pas1-space">  
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  jo</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TJSONObject</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create4</span><span class="pas1-symbol">(</span><span class="pas1-identifier">HttpRqresponseText</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-reservedword">try
</span><span class="pas1-space">    </span><span class="pas1-comment">//writeln(jo.getstring('data'));
</span><span class="pas1-space">    writeln</span><span class="pas1-symbol">(</span><span class="pas1-identifier">itoa</span><span class="pas1-symbol">(</span><span class="pas1-identifier">jo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">getjsonarray</span><span class="pas1-symbol">(</span><span class="pas1-string">'data'</span><span class="pas1-symbol">).</span><span class="pas1-identifier">getjsonobject</span><span class="pas1-symbol">(</span><span class="pas1-number">0</span><span class="pas1-symbol">).</span><span class="pas1-identifier">length</span><span class="pas1-symbol">))
</span><span class="pas1-space">    writeln</span><span class="pas1-symbol">(</span><span class="pas1-identifier">itoa</span><span class="pas1-symbol">(</span><span class="pas1-identifier">jo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">getjsonarray</span><span class="pas1-symbol">(</span><span class="pas1-string">'data'</span><span class="pas1-symbol">).</span><span class="pas1-identifier">length</span><span class="pas1-symbol">))
</span><span class="pas1-space">    result</span><span class="pas1-symbol">:=</span><span class="pas1-space"> jo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">getjsonarray</span><span class="pas1-symbol">(</span><span class="pas1-string">'data'</span><span class="pas1-symbol">);</span><span class="pas1-space"> 
    </span><span class="pas1-comment">//write out to check     
</span><span class="pas1-space">    </span><span class="pas1-reservedword">for</span><span class="pas1-space"> </span><span class="pas1-reservedword">it</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> result</span><span class="pas1-symbol">.</span><span class="pas1-identifier">length</span><span class="pas1-symbol">-</span><span class="pas1-number">1</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> 
       writeln</span><span class="pas1-symbol">(</span><span class="pas1-identifier">result</span><span class="pas1-symbol">.</span><span class="pas1-identifier">getjsonobject</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">it</span><span class="pas1-symbol">).</span><span class="pas1-identifier">getstring</span><span class="pas1-symbol">(</span><span class="pas1-string">'gasDayStart'</span><span class="pas1-symbol">)+</span><span class="pas1-string">':'</span><span class="pas1-symbol">+
</span><span class="pas1-space">                      result</span><span class="pas1-symbol">.</span><span class="pas1-identifier">getjsonobject</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">it</span><span class="pas1-symbol">).</span><span class="pas1-identifier">getstring</span><span class="pas1-symbol">(</span><span class="pas1-string">'injection'</span><span class="pas1-symbol">));</span><span class="pas1-space"> 
  </span><span class="pas1-reservedword">except
</span><span class="pas1-space">    writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'EJson: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">ExceptiontoString</span><span class="pas1-symbol">(</span><span class="pas1-identifier">exceptiontype</span><span class="pas1-symbol">,</span><span class="pas1-space"> exceptionparam</span><span class="pas1-symbol">));
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space">                         
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space">       

</span><span class="pas1-reservedword">function</span><span class="pas1-space"> getEnergyStreamJSON2</span><span class="pas1-symbol">(</span><span class="pas1-identifier">AURL</span><span class="pas1-symbol">,</span><span class="pas1-space"> feedstream</span><span class="pas1-symbol">,</span><span class="pas1-space"> aApikey</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">):</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> encodURL</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-space">    httpRq</span><span class="pas1-symbol">,</span><span class="pas1-identifier">hr</span><span class="pas1-symbol">:</span><span class="pas1-space"> Olevariant</span><span class="pas1-symbol">;
</span><span class="pas1-space">    asp</span><span class="pas1-symbol">:</span><span class="pas1-space"> TStringArray</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  httpRq</span><span class="pas1-symbol">:=</span><span class="pas1-space"> CreateOleObject</span><span class="pas1-symbol">(</span><span class="pas1-string">'WinHttp.WinHttpRequest.5.1'</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-comment">// Opens HTTPs connection.  
</span><span class="pas1-space">  </span><span class="pas1-reservedword">try</span><span class="pas1-space"> 
    asp</span><span class="pas1-symbol">:=</span><span class="pas1-space"> splitStr</span><span class="pas1-symbol">(</span><span class="pas1-identifier">feedstream</span><span class="pas1-symbol">,</span><span class="pas1-string">','</span><span class="pas1-symbol">);
</span><span class="pas1-space">    encodURL</span><span class="pas1-symbol">:=</span><span class="pas1-space"> Format</span><span class="pas1-symbol">(</span><span class="pas1-identifier">AURL</span><span class="pas1-symbol">,[</span><span class="pas1-identifier">HTTPEncode</span><span class="pas1-symbol">(</span><span class="pas1-identifier">asp</span><span class="pas1-symbol">[</span><span class="pas1-number">0</span><span class="pas1-symbol">]),(</span><span class="pas1-identifier">asp</span><span class="pas1-symbol">[</span><span class="pas1-number">1</span><span class="pas1-symbol">]),</span><span class="pas1-identifier">asp</span><span class="pas1-symbol">[</span><span class="pas1-number">2</span><span class="pas1-symbol">]]);</span><span class="pas1-space">   
    writeln</span><span class="pas1-symbol">(</span><span class="pas1-identifier">encodurl</span><span class="pas1-symbol">)</span><span class="pas1-space">        
    hr</span><span class="pas1-symbol">:=</span><span class="pas1-space"> httpRq</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Open</span><span class="pas1-symbol">(</span><span class="pas1-string">'GET'</span><span class="pas1-symbol">,</span><span class="pas1-space"> encodURL</span><span class="pas1-symbol">,</span><span class="pas1-space"> false</span><span class="pas1-symbol">);
</span><span class="pas1-space">    httpRq</span><span class="pas1-symbol">.</span><span class="pas1-identifier">setRequestheader</span><span class="pas1-symbol">(</span><span class="pas1-string">'user-agent'</span><span class="pas1-symbol">,</span><span class="pas1-identifier">USERAGENTE</span><span class="pas1-symbol">);
</span><span class="pas1-space">    httpRq</span><span class="pas1-symbol">.</span><span class="pas1-identifier">setRequestheader</span><span class="pas1-symbol">(</span><span class="pas1-string">'x-key'</span><span class="pas1-symbol">,</span><span class="pas1-identifier">aAPIkey</span><span class="pas1-symbol">);</span><span class="pas1-space"> 
    </span><span class="pas1-reservedword">if</span><span class="pas1-space"> hr</span><span class="pas1-symbol">=</span><span class="pas1-space"> S_OK </span><span class="pas1-reservedword">then</span><span class="pas1-space"> HttpRq</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Send</span><span class="pas1-symbol">();
</span><span class="pas1-space">    </span><span class="pas1-reservedword">If</span><span class="pas1-space"> HttpRq</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Status </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-number">200</span><span class="pas1-space"> </span><span class="pas1-reservedword">Then
</span><span class="pas1-space">       result</span><span class="pas1-symbol">:=</span><span class="pas1-space"> HttpRq</span><span class="pas1-symbol">.</span><span class="pas1-identifier">responseText
    </span><span class="pas1-reservedword">Else</span><span class="pas1-space"> result</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-string">'Failed getting response:'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">itoa</span><span class="pas1-symbol">(</span><span class="pas1-identifier">HttpRq</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Status</span><span class="pas1-symbol">)+</span><span class="pas1-identifier">HttpRq</span><span class="pas1-symbol">.</span><span class="pas1-identifier">responseText</span><span class="pas1-symbol">;
</span><span class="pas1-space">        </span><span class="pas1-comment">//writeln('debug response: '+HttpReq.GetAllResponseHeaders); 
</span><span class="pas1-space">  </span><span class="pas1-reservedword">except</span><span class="pas1-space">  
    writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'Error: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">HttpRq</span><span class="pas1-symbol">.</span><span class="pas1-identifier">responseText</span><span class="pas1-symbol">);
</span><span class="pas1-space">    writeln</span><span class="pas1-symbol">(</span><span class="pas1-string">'EHTTP: '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">ExceptiontoString</span><span class="pas1-symbol">(</span><span class="pas1-identifier">exceptiontype</span><span class="pas1-symbol">,</span><span class="pas1-space"> exceptionparam</span><span class="pas1-symbol">));</span><span class="pas1-space">       
  </span><span class="pas1-reservedword">finally
</span><span class="pas1-space">    httprq</span><span class="pas1-symbol">:=</span><span class="pas1-space"> unassigned</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space">                  
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space"> 

</span><span class="pas1-comment">//https://github.com/Zeus64/alcinoe/blob/master/source/ALHttpClient.pas
//http://www.softwareschule.ch/examples/alhttpclient2.txt
</span><span class="pas1-reservedword">function</span><span class="pas1-space"> TALHTTPClient_Get</span><span class="pas1-symbol">(</span><span class="pas1-identifier">aUrl</span><span class="pas1-symbol">:</span><span class="pas1-space"> AnsiString</span><span class="pas1-symbol">;
</span><span class="pas1-space">                                  feedstream</span><span class="pas1-symbol">,</span><span class="pas1-space"> aApikey</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">):</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">Var</span><span class="pas1-space"> 
  LHttpClient</span><span class="pas1-symbol">:</span><span class="pas1-space"> TALWininetHttpClient</span><span class="pas1-symbol">;
</span><span class="pas1-space">  asp</span><span class="pas1-symbol">:</span><span class="pas1-space"> TStringArray</span><span class="pas1-symbol">;</span><span class="pas1-space"> 
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  LHttpClient</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TALWininetHttpClient</span><span class="pas1-symbol">.</span><span class="pas1-identifier">create</span><span class="pas1-symbol">;
</span><span class="pas1-space">  asp</span><span class="pas1-symbol">:=</span><span class="pas1-space"> splitStr</span><span class="pas1-symbol">(</span><span class="pas1-identifier">feedstream</span><span class="pas1-symbol">,</span><span class="pas1-string">','</span><span class="pas1-symbol">);
</span><span class="pas1-space">  LHttpClient</span><span class="pas1-symbol">.</span><span class="pas1-identifier">url</span><span class="pas1-symbol">:=</span><span class="pas1-space"> Format</span><span class="pas1-symbol">(</span><span class="pas1-identifier">AURL</span><span class="pas1-symbol">,[</span><span class="pas1-identifier">HTTPEncode</span><span class="pas1-symbol">(</span><span class="pas1-identifier">asp</span><span class="pas1-symbol">[</span><span class="pas1-number">0</span><span class="pas1-symbol">]),(</span><span class="pas1-identifier">asp</span><span class="pas1-symbol">[</span><span class="pas1-number">1</span><span class="pas1-symbol">]),</span><span class="pas1-identifier">asp</span><span class="pas1-symbol">[</span><span class="pas1-number">2</span><span class="pas1-symbol">]]);</span><span class="pas1-space"> 
  LHttpClient</span><span class="pas1-symbol">.</span><span class="pas1-identifier">RequestMethod</span><span class="pas1-symbol">:=</span><span class="pas1-space"> HTTPmt_Get</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//HTTPrm_Post;
</span><span class="pas1-space">  LHttpClient</span><span class="pas1-symbol">.</span><span class="pas1-identifier">RequestHeader</span><span class="pas1-symbol">.</span><span class="pas1-identifier">UserAgent</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">USERAGENTE</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-comment">//LHttpClient.RequestHeader.CustomHeaders:= 
</span><span class="pas1-space">  LHttpClient</span><span class="pas1-symbol">.</span><span class="pas1-identifier">RequestHeader</span><span class="pas1-symbol">.</span><span class="pas1-identifier">RawHeaderText</span><span class="pas1-symbol">:=</span><span class="pas1-string">'x-key:'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">aAPIkey</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">try
</span><span class="pas1-space">    result</span><span class="pas1-symbol">:=</span><span class="pas1-space"> LHttpClient</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Get1</span><span class="pas1-symbol">(</span><span class="pas1-identifier">LHttpClient</span><span class="pas1-symbol">.</span><span class="pas1-identifier">url</span><span class="pas1-symbol">);</span><span class="pas1-space"> </span><span class="pas1-comment">//overload;    
</span><span class="pas1-space">  </span><span class="pas1-reservedword">finally
</span><span class="pas1-space">    LHttpClient</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Free</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space"> 

</span><span class="pas1-reservedword">const
</span><span class="pas1-space">  ESCAPE_CHAR </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'\'</span><span class="pas1-symbol">;
</span><span class="pas1-space">  QUOTE_CHAR </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'&quot;'</span><span class="pas1-symbol">;
</span><span class="pas1-space">  EXCEPTION_FMT </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">'Invalid escape at position %d'</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">function</span><span class="pas1-space"> JSONUnescape</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> Source</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-space"> CRLF</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-space"> </span><span class="pas1-comment">{= #13#10}</span><span class="pas1-symbol">):</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> EscapeCharPos</span><span class="pas1-symbol">,</span><span class="pas1-space"> TempPos</span><span class="pas1-symbol">:</span><span class="pas1-space"> Integer</span><span class="pas1-symbol">;
</span><span class="pas1-space">    Temp</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-space">    IsQuotedString</span><span class="pas1-symbol">:</span><span class="pas1-space"> Boolean</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  </span><span class="pas1-reservedword">if</span><span class="pas1-space"> CRLF </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-string">''</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> CRLF</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-character">#13#10</span><span class="pas1-symbol">;
</span><span class="pas1-space">  result</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-string">''</span><span class="pas1-symbol">;
</span><span class="pas1-space">  IsQuotedString</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-symbol">(</span><span class="pas1-identifier">Source</span><span class="pas1-symbol">[</span><span class="pas1-number">1</span><span class="pas1-symbol">]</span><span class="pas1-space"> </span><span class="pas1-symbol">=</span><span class="pas1-space"> QUOTE_CHAR</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">and
</span><span class="pas1-space">    </span><span class="pas1-symbol">(</span><span class="pas1-identifier">Source</span><span class="pas1-symbol">[</span><span class="pas1-identifier">Length</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Source</span><span class="pas1-symbol">)]</span><span class="pas1-space"> </span><span class="pas1-symbol">=</span><span class="pas1-space"> QUOTE_CHAR</span><span class="pas1-symbol">);
</span><span class="pas1-space">  EscapeCharPos</span><span class="pas1-symbol">:=</span><span class="pas1-space"> Pos</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ESCAPE_CHAR</span><span class="pas1-symbol">,</span><span class="pas1-space"> Source</span><span class="pas1-symbol">);
</span><span class="pas1-space">  TempPos</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-number">1</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">while</span><span class="pas1-space"> EscapeCharPos </span><span class="pas1-symbol">&gt;</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-space"> </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    result</span><span class="pas1-symbol">:=</span><span class="pas1-space"> result </span><span class="pas1-symbol">+</span><span class="pas1-space"> Copy</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Source</span><span class="pas1-symbol">,</span><span class="pas1-space"> TempPos</span><span class="pas1-symbol">,</span><span class="pas1-space"> EscapeCharPos </span><span class="pas1-symbol">-</span><span class="pas1-space"> TempPos</span><span class="pas1-symbol">);
</span><span class="pas1-space">    TempPos</span><span class="pas1-symbol">:=</span><span class="pas1-space"> EscapeCharPos</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">if</span><span class="pas1-space"> EscapeCharPos </span><span class="pas1-symbol">&lt;</span><span class="pas1-space"> Length</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Source</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">-</span><span class="pas1-space"> booltoint</span><span class="pas1-symbol">(</span><span class="pas1-identifier">IsQuotedString</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">then
</span><span class="pas1-space">      </span><span class="pas1-reservedword">case</span><span class="pas1-space"> Source</span><span class="pas1-symbol">[</span><span class="pas1-identifier">EscapeCharPos </span><span class="pas1-symbol">+</span><span class="pas1-space"> </span><span class="pas1-number">1</span><span class="pas1-symbol">]</span><span class="pas1-space"> </span><span class="pas1-reservedword">of
</span><span class="pas1-space">        </span><span class="pas1-string">'t'</span><span class="pas1-symbol">:
</span><span class="pas1-space">          Temp</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-character">#9</span><span class="pas1-symbol">;
</span><span class="pas1-space">        </span><span class="pas1-string">'n'</span><span class="pas1-symbol">:
</span><span class="pas1-space">          Temp</span><span class="pas1-symbol">:=</span><span class="pas1-space"> CRLF</span><span class="pas1-symbol">;
</span><span class="pas1-space">        </span><span class="pas1-string">'\'</span><span class="pas1-symbol">:
</span><span class="pas1-space">          Temp</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-string">'\'</span><span class="pas1-symbol">;
</span><span class="pas1-space">        </span><span class="pas1-string">'&quot;'</span><span class="pas1-symbol">:
</span><span class="pas1-space">          Temp</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-string">'&quot;'</span><span class="pas1-symbol">;
</span><span class="pas1-space">        </span><span class="pas1-string">'u'</span><span class="pas1-symbol">:
</span><span class="pas1-space">          </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">            </span><span class="pas1-reservedword">if</span><span class="pas1-space"> EscapeCharPos </span><span class="pas1-symbol">+</span><span class="pas1-space"> </span><span class="pas1-number">4</span><span class="pas1-space"> </span><span class="pas1-symbol">&lt;</span><span class="pas1-space"> Length</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Source</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">-</span><span class="pas1-space"> Integer</span><span class="pas1-symbol">(</span><span class="pas1-identifier">IsQuotedString</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">then
</span><span class="pas1-space">              Temp </span><span class="pas1-symbol">:=</span><span class="pas1-space"> Chr</span><span class="pas1-symbol">(</span><span class="pas1-identifier">StrToInt</span><span class="pas1-symbol">(</span><span class="pas1-string">'$'</span><span class="pas1-space"> </span><span class="pas1-symbol">+</span><span class="pas1-space"> Copy</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Source</span><span class="pas1-symbol">,</span><span class="pas1-space"> EscapeCharPos </span><span class="pas1-symbol">+</span><span class="pas1-space"> </span><span class="pas1-number">2</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">4</span><span class="pas1-symbol">)))
</span><span class="pas1-space">            </span><span class="pas1-reservedword">else</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">              </span><span class="pas1-reservedword">raise</span><span class="pas1-space"> Exception</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Format</span><span class="pas1-symbol">(</span><span class="pas1-identifier">EXCEPTION_FMT</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-symbol">[</span><span class="pas1-identifier">EscapeCharPos</span><span class="pas1-symbol">]));
</span><span class="pas1-space">            </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">            Inc2</span><span class="pas1-symbol">(</span><span class="pas1-identifier">TempPos</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">4</span><span class="pas1-symbol">);</span><span class="pas1-space">             
          </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">      </span><span class="pas1-reservedword">else</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">        </span><span class="pas1-reservedword">Xraise</span><span class="pas1-space"> </span><span class="pas1-symbol">(</span><span class="pas1-identifier">Exception</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Format</span><span class="pas1-symbol">(</span><span class="pas1-identifier">EXCEPTION_FMT</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-symbol">[</span><span class="pas1-identifier">EscapeCharPos</span><span class="pas1-symbol">])));</span><span class="pas1-space">       
       </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">      </span><span class="pas1-reservedword">end
</span><span class="pas1-space">    </span><span class="pas1-reservedword">else</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">      </span><span class="pas1-reservedword">Xraise</span><span class="pas1-space"> </span><span class="pas1-symbol">(</span><span class="pas1-identifier">Exception</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Format</span><span class="pas1-symbol">(</span><span class="pas1-identifier">EXCEPTION_FMT</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-symbol">[</span><span class="pas1-identifier">EscapeCharPos</span><span class="pas1-symbol">])));
</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space"> 
    Inc2</span><span class="pas1-symbol">(</span><span class="pas1-identifier">TempPos</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">2</span><span class="pas1-symbol">);
</span><span class="pas1-space">    result</span><span class="pas1-symbol">:=</span><span class="pas1-space"> result </span><span class="pas1-symbol">+</span><span class="pas1-space"> Temp</span><span class="pas1-symbol">;
</span><span class="pas1-space">    EscapeCharPos</span><span class="pas1-symbol">:=</span><span class="pas1-space"> PosEx</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ESCAPE_CHAR</span><span class="pas1-symbol">,</span><span class="pas1-space"> Source</span><span class="pas1-symbol">,</span><span class="pas1-space"> TempPos</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">  result</span><span class="pas1-symbol">:=</span><span class="pas1-space"> result </span><span class="pas1-symbol">+</span><span class="pas1-space"> Copy</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Source</span><span class="pas1-symbol">,</span><span class="pas1-space"> TempPos</span><span class="pas1-symbol">,</span><span class="pas1-space"> Length</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Source</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">-</span><span class="pas1-space"> TempPos </span><span class="pas1-symbol">+</span><span class="pas1-space"> </span><span class="pas1-number">1</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-space">      
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> JTESTDATA</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> setTestData</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-identifier">JTESTDATA</span><span class="pas1-symbol">:=
</span><span class="pas1-space">  </span><span class="pas1-string">'{                                 '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">  </span><span class="pas1-string">'&quot;client&quot;: {                       '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">  </span><span class="pas1-string">'  &quot;clientId&quot;: &quot;TestClient4&quot;,      '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">  </span><span class="pas1-string">'  &quot;clientVersion&quot;: &quot;1.1&quot;          '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">  </span><span class="pas1-string">'},                                '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">  </span><span class="pas1-string">'&quot;threatInfo&quot;: {                   '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">  </span><span class="pas1-string">'  &quot;threatTypes&quot;:      [&quot;MALWARE&quot;, &quot;SOCIAL_ENGINEERING&quot;],'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">  </span><span class="pas1-string">'  &quot;platformTypes&quot;:    [&quot;LINUX&quot;],                        '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">  </span><span class="pas1-string">'  &quot;threatEntryTypes&quot;: [&quot;URL&quot;],                          '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">  </span><span class="pas1-string">'  &quot;threatEntries&quot;: [                                    '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">  </span><span class="pas1-string">'    {&quot;url&quot;: &quot;%s&quot;}                        '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">  </span><span class="pas1-string">'  ]                                                     '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">  </span><span class="pas1-string">' }                                                      '</span><span class="pas1-symbol">+</span><span class="pas1-identifier">LF</span><span class="pas1-symbol">+
</span><span class="pas1-space">  </span><span class="pas1-string">'}'</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;


</span><span class="pas1-comment">{The ExecuteStr should include somewhere %1 because at this position the shell-order will be included. Example:
NAME: Chat;
Describtion: Chatprotocol;
ExecuteStr: &quot;C:\ChatClient.exe %1&quot;.
Chat://2002/   -&gt; executes:  &quot;C:\Chatclient.exe Chat://2002/&quot;
}

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> RegisterProtocol2</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> Name</span><span class="pas1-symbol">,</span><span class="pas1-space"> Describtion</span><span class="pas1-symbol">,</span><span class="pas1-space"> ExecuteStr</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">var</span><span class="pas1-space"> reg</span><span class="pas1-symbol">:</span><span class="pas1-space"> TRegistry</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  reg</span><span class="pas1-symbol">:=</span><span class="pas1-space"> TRegistry</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">try
</span><span class="pas1-space">    reg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">RootKey</span><span class="pas1-symbol">:=</span><span class="pas1-space"> HKEY_CLASSES_ROOT</span><span class="pas1-symbol">;
</span><span class="pas1-space">    reg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">OpenKey</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Name</span><span class="pas1-symbol">,</span><span class="pas1-space"> True</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">try
</span><span class="pas1-space">      reg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Writestring</span><span class="pas1-symbol">(</span><span class="pas1-string">''</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'URL:'</span><span class="pas1-space"> </span><span class="pas1-symbol">+</span><span class="pas1-space"> Name </span><span class="pas1-symbol">+</span><span class="pas1-string">' ('</span><span class="pas1-space"> </span><span class="pas1-symbol">+</span><span class="pas1-space"> Describtion </span><span class="pas1-symbol">+</span><span class="pas1-space"> </span><span class="pas1-string">')'</span><span class="pas1-symbol">);
</span><span class="pas1-space">      reg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">WriteInteger</span><span class="pas1-symbol">(</span><span class="pas1-string">'EditFlags'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">2</span><span class="pas1-symbol">);
</span><span class="pas1-space">      reg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">WriteString</span><span class="pas1-symbol">(</span><span class="pas1-string">'Source Filter'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">''</span><span class="pas1-symbol">);
</span><span class="pas1-space">      reg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">WriteString</span><span class="pas1-symbol">(</span><span class="pas1-string">'URL Protocol'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">''</span><span class="pas1-symbol">);
</span><span class="pas1-space">      reg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">OpenKey</span><span class="pas1-symbol">(</span><span class="pas1-string">'shell'</span><span class="pas1-symbol">,</span><span class="pas1-space"> True</span><span class="pas1-symbol">);
</span><span class="pas1-space">      reg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">OpenKey</span><span class="pas1-symbol">(</span><span class="pas1-string">'open'</span><span class="pas1-symbol">,</span><span class="pas1-space"> True</span><span class="pas1-symbol">);
</span><span class="pas1-space">      reg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">OpenKey</span><span class="pas1-symbol">(</span><span class="pas1-string">'command'</span><span class="pas1-symbol">,</span><span class="pas1-space"> True</span><span class="pas1-symbol">);
</span><span class="pas1-space">      reg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Writestring</span><span class="pas1-symbol">(</span><span class="pas1-string">''</span><span class="pas1-symbol">,</span><span class="pas1-space"> ExecuteStr</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">finally
</span><span class="pas1-space">      reg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">CloseKey</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">finally
</span><span class="pas1-space">    reg</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Free</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">function</span><span class="pas1-space"> getPostGoogleAPI</span><span class="pas1-symbol">(</span><span class="pas1-identifier">feedstream</span><span class="pas1-symbol">,</span><span class="pas1-space"> aApikey</span><span class="pas1-symbol">,</span><span class="pas1-space"> tolang</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">):</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">var
</span><span class="pas1-space">  Url</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-space">  jo</span><span class="pas1-symbol">,</span><span class="pas1-space"> locate</span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONObject</span><span class="pas1-symbol">;
</span><span class="pas1-space">  httpRq</span><span class="pas1-symbol">,</span><span class="pas1-identifier">hr</span><span class="pas1-symbol">:</span><span class="pas1-space"> Olevariant</span><span class="pas1-symbol">;
</span><span class="pas1-space">  strm</span><span class="pas1-symbol">:</span><span class="pas1-space"> TStringStream</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  </span><span class="pas1-comment">//setTestData before;
</span><span class="pas1-space">  httpRq</span><span class="pas1-symbol">:=</span><span class="pas1-space"> CreateOleObject</span><span class="pas1-symbol">(</span><span class="pas1-string">'WinHttp.WinHttpRequest.5.1'</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-comment">// Open HTTPs connection.  
</span><span class="pas1-space">  </span><span class="pas1-reservedword">try</span><span class="pas1-space">              
    hr</span><span class="pas1-symbol">:=</span><span class="pas1-space"> httpRq</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Open</span><span class="pas1-symbol">(</span><span class="pas1-string">'POST'</span><span class="pas1-symbol">,</span><span class="pas1-string">'https://safebrowsing.googleapis.com/v4/threatMatches:find?key='
</span><span class="pas1-space">                                                    </span><span class="pas1-symbol">+</span><span class="pas1-identifier">aApikey</span><span class="pas1-symbol">,</span><span class="pas1-space"> false</span><span class="pas1-symbol">);
</span><span class="pas1-space">    httpRq</span><span class="pas1-symbol">.</span><span class="pas1-identifier">setRequestheader</span><span class="pas1-symbol">(</span><span class="pas1-string">'user-agent'</span><span class="pas1-symbol">,</span><span class="pas1-identifier">SUSERAGENT  </span><span class="pas1-symbol">);
</span><span class="pas1-space">    httpRq</span><span class="pas1-symbol">.</span><span class="pas1-identifier">setRequestheader</span><span class="pas1-symbol">(</span><span class="pas1-string">'content-type'</span><span class="pas1-symbol">,</span><span class="pas1-string">'application/json'</span><span class="pas1-symbol">);</span><span class="pas1-space"> 
    </span><span class="pas1-reservedword">if</span><span class="pas1-space"> hr</span><span class="pas1-symbol">=</span><span class="pas1-space"> S_OK </span><span class="pas1-reservedword">then</span><span class="pas1-space"> HttpRq</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Send</span><span class="pas1-symbol">(</span><span class="pas1-identifier">format</span><span class="pas1-symbol">(</span><span class="pas1-identifier">JTESTDATA</span><span class="pas1-symbol">,[</span><span class="pas1-identifier">feedstream</span><span class="pas1-symbol">]));
</span><span class="pas1-space">    </span><span class="pas1-comment">//writeln(format(JTESTDATA,[feedstream]));
</span><span class="pas1-space">    </span><span class="pas1-reservedword">If</span><span class="pas1-space"> HttpRq</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Status </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-number">200</span><span class="pas1-space"> </span><span class="pas1-reservedword">Then
</span><span class="pas1-space">       result</span><span class="pas1-symbol">:=</span><span class="pas1-space"> HttpRq</span><span class="pas1-symbol">.</span><span class="pas1-identifier">responseText
    </span><span class="pas1-reservedword">Else</span><span class="pas1-space"> result</span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-string">'Failed at getting response:'</span><span class="pas1-symbol">+</span><span class="pas1-identifier">itoa</span><span class="pas1-symbol">(</span><span class="pas1-identifier">HttpRq</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Status</span><span class="pas1-symbol">)+</span><span class="pas1-identifier">HttpRq</span><span class="pas1-symbol">.</span><span class="pas1-identifier">responseText</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-comment">//writeln('debug response '+HttpReq.GetAllResponseHeaders);     
</span><span class="pas1-space">  </span><span class="pas1-reservedword">finally
</span><span class="pas1-space">    httprq</span><span class="pas1-symbol">:=</span><span class="pas1-space"> unassigned</span><span class="pas1-symbol">;</span><span class="pas1-space">  
  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space">                  
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space"> 

</span><span class="pas1-reservedword">var</span><span class="pas1-space"> HttpResponse</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">begin</span><span class="pas1-space">  </span><span class="pas1-comment">//@main
</span><span class="pas1-space">  </span><span class="pas1-comment">//maxform1.ShellStyle1click(self)
</span><span class="pas1-space">  </span><span class="pas1-reservedword">maxform1</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Console1Click</span><span class="pas1-symbol">(</span><span class="pas1-identifier">self</span><span class="pas1-symbol">)
</span><span class="pas1-space">  
  </span><span class="pas1-comment">//writeln(getMusicAPI_Com('kiss the rain' ,'en-US', 3));
</span><span class="pas1-space">  </span><span class="pas1-comment">//writeln(JSONUnescape('&quot;\u2764Love\tAPI\u2764&quot;', #13#10)); // {= #13#10})   
</span><span class="pas1-space">  </span><span class="pas1-comment">//writeln(JSONUnescape('\\\Invalid escaped text',''));
</span><span class="pas1-space">  </span><span class="pas1-comment">//TALMultipartFormDataDecoder
</span><span class="pas1-space">  </span><span class="pas1-comment">//ALMultipartExtractBoundaryFromContentType - Gateway, Host, Adapter GHA
</span><span class="pas1-space">  </span><span class="pas1-comment">//ALBase64EncodeStringMIME
</span><span class="pas1-space">  </span><span class="pas1-comment">// ALHTTPdecode //TAlWinInetHTTPClientStatusEvent
</span><span class="pas1-space"> 
 </span><span class="pas1-comment">//writeln(itoa(JExecute('cmd /C dir *.*',@TTextHandlerQ, true, false))); 
</span><span class="pas1-space"> </span><span class="pas1-comment">//writeln(GETDOSOutput('cmd.exe /c wmic cpu get architecture','C:\'));
</span><span class="pas1-space"> </span><span class="pas1-comment">//writeln(itoa(JExecute('cmd /c netstat -o',@TTextHandlerQ, true, false))); 
</span><span class="pas1-space"> </span><span class="pas1-comment">//Webbrowser1.Document.QueryInterface(IHTMLDocument2, iDoc);
</span><span class="pas1-space"> </span><span class="pas1-comment">//ExecuteScript(iDoc, 'document.login.submit()', 'JavaScript'); 
</span><span class="pas1-space"> </span><span class="pas1-comment">// writeln(getwapi) procedure GetDNSServers(AList: TStringList); GetDNSServers getIPs getips;
</span><span class="pas1-space">  
     setTestData</span><span class="pas1-symbol">;
</span><span class="pas1-space">   </span><span class="pas1-comment">{  with TJson.create do begin
       JTESTDATA:= format(JTESTDATA,['www.ibm.ch']);
       parse(JTESTDATA);
       writeln(Stringify);
       clear;
       free;
     end;  }
</span><span class="pas1-space">     
   </span><span class="pas1-comment">//writeln('GPost: '+getPostGoogleAPI('http://www.urltocheck1.org/',GoogleApiKey,''));
</span><span class="pas1-space">   </span><span class="pas1-comment">//  writeln('GPost: '+getPostGoogleAPI(URLMALWARE, GoogleApiKey,''));
</span><span class="pas1-space">    </span><span class="pas1-reservedword">with</span><span class="pas1-space"> TJson</span><span class="pas1-symbol">.</span><span class="pas1-identifier">create </span><span class="pas1-reservedword">do</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">       parse</span><span class="pas1-symbol">(</span><span class="pas1-identifier">JTESTDATA</span><span class="pas1-symbol">);
</span><span class="pas1-space">       writeln</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Stringify</span><span class="pas1-symbol">);
</span><span class="pas1-space">       clear</span><span class="pas1-symbol">;
</span><span class="pas1-space">       free</span><span class="pas1-symbol">;
</span><span class="pas1-space">     </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space">  
     
 </span><span class="pas1-comment">{ Note: If there are no matches (that is, if none of URLs specified in request are found on any of lists specified in a request), HTTP POST response simply returns empty object in response body. }
</span><span class="pas1-space">   </span><span class="pas1-comment">// writeln('GPost: '+getPostGoogleAPI('http://www.ibm.ch', GoogleApiKey,''));
</span><span class="pas1-space">   </span><span class="pas1-comment">// getURLScanAPI_Python('www.ibm.ch');
</span><span class="pas1-space">   
  </span><span class="pas1-comment">// writeln(GetEnergyStreamJSON('DE,2022-03-01,20',AGSI_APIKEY));
</span><span class="pas1-space">  
  plotform</span><span class="pas1-symbol">:=</span><span class="pas1-space"> getForm2</span><span class="pas1-symbol">(</span><span class="pas1-number">1400</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">600</span><span class="pas1-symbol">,</span><span class="pas1-space"> clsilver</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'Sciplot4maXbox'</span><span class="pas1-symbol">);
</span><span class="pas1-space">  plotform</span><span class="pas1-symbol">.</span><span class="pas1-identifier">icon</span><span class="pas1-symbol">.</span><span class="pas1-identifier">loadfromresourcename</span><span class="pas1-symbol">(</span><span class="pas1-identifier">hinstance</span><span class="pas1-symbol">,</span><span class="pas1-string">'ZHISTOGRAM'</span><span class="pas1-symbol">);
</span><span class="pas1-space">  
  HttpResponse</span><span class="pas1-symbol">:=</span><span class="pas1-space"> getEnergyStreamJSON2</span><span class="pas1-symbol">(</span><span class="pas1-identifier">URL_AGSIAPI2</span><span class="pas1-symbol">,</span><span class="pas1-string">'DE,2022-01-03,150'</span><span class="pas1-symbol">,</span><span class="pas1-identifier">AGSI_APIKEY</span><span class="pas1-symbol">);</span><span class="pas1-space">       
  JSON2Plot</span><span class="pas1-symbol">(</span><span class="pas1-identifier">plotform</span><span class="pas1-symbol">,</span><span class="pas1-space"> letGenerateJSON2</span><span class="pas1-symbol">(</span><span class="pas1-identifier">HttpResponse</span><span class="pas1-symbol">));</span><span class="pas1-space">  
  
  </span><span class="pas1-comment">//writeln(TALHTTPClient_Get(URL_AGSIAPI2,'DE,2022-01-03,10',AGSI_APIKEY));
</span><span class="pas1-space">  </span><span class="pas1-comment">//LOCALE_US LOCALE_PORTUGUESE_BRAZILIAN MediaType_Xml MediaType_Json
</span><span class="pas1-space">   </span><span class="pas1-comment">//TStatusCode TRestUtils TStatusCode TReponseCode
</span><span class="pas1-space">     </span><span class="pas1-comment">//GetNetworkConnections: string; //GetNetworkDrives
</span><span class="pas1-space">     </span><span class="pas1-comment">//timesync letSynchroTime
</span><span class="pas1-space"> </span><span class="pas1-comment">//ParseString4(s,sep: string; sl: TStrings);
</span><span class="pas1-space"> </span><span class="pas1-comment">//LoadGridFromfile(SG: TStringGrid; fname: string);
</span><span class="pas1-space"> </span><span class="pas1-comment">//SaveGridTofile(SG: TStringGrid; fname: string);
</span><span class="pas1-space"> </span><span class="pas1-comment">//WriteVectorToGrid(SG: TStringGrid; vname: string; wval: TAffineVector);
</span><span class="pas1-space"> </span><span class="pas1-comment">//WriteStringToGrid(SG: TStringGrid; vname: string; icol: longword; wval: string);
</span><span class="pas1-space"> </span><span class="pas1-comment">//WriteFloatToGrid(SG: TStringGrid; vname: string; icol: longword; wval: double);
</span><span class="pas1-space"> </span><span class="pas1-comment">//WebPostData
</span><span class="pas1-space"> 
</span><span class="pas1-reservedword">End</span><span class="pas1-symbol">.

</span><span class="pas1-reservedword">Ref</span><span class="pas1-space"> history</span><span class="pas1-symbol">:

[]
</span><span class="pas1-identifier">Error</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-comment">{&quot;last_page&quot;:0,&quot;total&quot;:0,&quot;dataset&quot;:&quot;storage ERROR&quot;,&quot;error&quot;:&quot;access denied&quot;,&quot;message&quot;:&quot;Invalid or missing API key&quot;,&quot;data&quot;:[]}
</span><span class="pas1-identifier">E</span><span class="pas1-symbol">:</span><span class="pas1-space"> Exception</span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONArray</span><span class="pas1-symbol">[</span><span class="pas1-number">0</span><span class="pas1-symbol">]</span><span class="pas1-space"> </span><span class="pas1-reservedword">not</span><span class="pas1-space"> found</span><span class="pas1-symbol">.

</span><span class="pas1-identifier">get a api key first</span><span class="pas1-symbol">:</span><span class="pas1-space"> https</span><span class="pas1-symbol">:</span><span class="pas1-comment">//agsi.gie.eu/account

</span><span class="pas1-identifier">GitGuardian has detected the following Google API Key exposed within your GitHub account</span><span class="pas1-symbol">.
</span><span class="pas1-identifier">Exception</span><span class="pas1-symbol">:</span><span class="pas1-space"> WinHttp</span><span class="pas1-symbol">.</span><span class="pas1-identifier">WinHttpRequest</span><span class="pas1-symbol">:</span><span class="pas1-space"> The data necessary </span><span class="pas1-reservedword">to</span><span class="pas1-space"> complete this operation </span><span class="pas1-reservedword">is</span><span class="pas1-space"> </span><span class="pas1-reservedword">not</span><span class="pas1-space"> yet available</span><span class="pas1-symbol">.
</span><span class="pas1-identifier">The data represents gas </span><span class="pas1-reservedword">in</span><span class="pas1-space"> storage at the </span><span class="pas1-reservedword">end</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> the previous gas day</span><span class="pas1-symbol">.</span><span class="pas1-space"> Data </span><span class="pas1-reservedword">is</span><span class="pas1-space"> updated every day at </span><span class="pas1-number">19</span><span class="pas1-symbol">:</span><span class="pas1-number">30</span><span class="pas1-space"> CET </span><span class="pas1-reservedword">and</span><span class="pas1-space"> a second time at </span><span class="pas1-number">23</span><span class="pas1-symbol">:</span><span class="pas1-float">00.</span><span class="pas1-space">  GIE </span><span class="pas1-reservedword">is</span><span class="pas1-space"> providing an API </span><span class="pas1-symbol">(</span><span class="pas1-identifier">Application Programming </span><span class="pas1-reservedword">Interface</span><span class="pas1-symbol">)</span><span class="pas1-space"> service </span><span class="pas1-reservedword">on</span><span class="pas1-space"> its AGSI </span><span class="pas1-reservedword">and</span><span class="pas1-space"> ALSI transparency publication platforms</span><span class="pas1-symbol">.
</span><span class="pas1-reservedword">Using</span><span class="pas1-space"> API access</span><span class="pas1-symbol">,</span><span class="pas1-space"> the audience can bypass the AGSI </span><span class="pas1-reservedword">and</span><span class="pas1-space"> ALSI website </span><span class="pas1-reservedword">and</span><span class="pas1-space"> get hold </span><span class="pas1-reservedword">of</span><span class="pas1-space"> the data directly </span><span class="pas1-reservedword">and</span><span class="pas1-space"> continuously</span><span class="pas1-symbol">.</span><span class="pas1-space"> </span><span class="pas1-reservedword">It</span><span class="pas1-space"> enables </span><span class="pas1-reservedword">to</span><span class="pas1-space"> extract</span><span class="pas1-symbol">,</span><span class="pas1-space"> filter the data </span><span class="pas1-reservedword">and</span><span class="pas1-space"> create any subset </span><span class="pas1-reservedword">as</span><span class="pas1-space"> required</span><span class="pas1-symbol">,</span><span class="pas1-space"> without having </span><span class="pas1-reservedword">to</span><span class="pas1-space"> download each dataset separately from the website</span><span class="pas1-symbol">.</span><span class="pas1-space"> The API </span><span class="pas1-reservedword">export</span><span class="pas1-space"> format </span><span class="pas1-reservedword">is</span><span class="pas1-space"> JSON</span><span class="pas1-symbol">.

</span><span class="pas1-identifier">Details

</span><span class="pas1-symbol">-</span><span class="pas1-space"> Secret </span><span class="pas1-reservedword">type</span><span class="pas1-symbol">:</span><span class="pas1-space"> Google API Key
</span><span class="pas1-symbol">-</span><span class="pas1-space"> Repository</span><span class="pas1-symbol">:</span><span class="pas1-space"> maxkleiner</span><span class="pas1-symbol">/</span><span class="pas1-identifier">agsi</span><span class="pas1-symbol">-</span><span class="pas1-identifier">data
</span><span class="pas1-symbol">-</span><span class="pas1-space"> Pushed date</span><span class="pas1-symbol">:</span><span class="pas1-space"> September </span><span class="pas1-number">16</span><span class="pas1-identifier">th </span><span class="pas1-number">2022</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">13</span><span class="pas1-symbol">:</span><span class="pas1-number">58</span><span class="pas1-symbol">:</span><span class="pas1-number">37</span><span class="pas1-space"> UTC

HttpClient httpclient </span><span class="pas1-symbol">=</span><span class="pas1-space"> new DefaultHttpClient</span><span class="pas1-symbol">();
</span><span class="pas1-identifier">HttpGet request </span><span class="pas1-symbol">=</span><span class="pas1-space"> new HttpGet</span><span class="pas1-symbol">(</span><span class="pas1-identifier">theUrl</span><span class="pas1-symbol">);
</span><span class="pas1-identifier">request</span><span class="pas1-symbol">.</span><span class="pas1-identifier">addHeader</span><span class="pas1-symbol">(&quot;</span><span class="pas1-identifier">x</span><span class="pas1-symbol">-</span><span class="pas1-identifier">api</span><span class="pas1-symbol">-</span><span class="pas1-identifier">key</span><span class="pas1-symbol">&quot;,</span><span class="pas1-space"> apiKey</span><span class="pas1-symbol">);
</span><span class="pas1-identifier">HttpResponse response </span><span class="pas1-symbol">=</span><span class="pas1-space"> httpclient</span><span class="pas1-symbol">.</span><span class="pas1-identifier">execute</span><span class="pas1-symbol">(</span><span class="pas1-identifier">request</span><span class="pas1-symbol">);

</span><span class="pas1-identifier">https</span><span class="pas1-symbol">:</span><span class="pas1-comment">//stackoverflow.com/questions/5334997/rest-get-requests-verbs-and-apikey

</span><span class="pas1-reservedword">Doc</span><span class="pas1-symbol">:</span><span class="pas1-space"> https</span><span class="pas1-symbol">:</span><span class="pas1-comment">//rapidapi.com/collection/list-of-free-apis
</span><span class="pas1-space">     https</span><span class="pas1-symbol">:</span><span class="pas1-comment">//algosim.org/SynViewSource/
</span><span class="pas1-space">     https</span><span class="pas1-symbol">:</span><span class="pas1-comment">//stackoverflow.com/questions/37410849/safe-browsing-lookup-api-v4-invalid-json-payload-received
</span><span class="pas1-space">     
log </span><span class="pas1-reservedword">doc</span><span class="pas1-symbol">:

</span><span class="pas1-identifier">GPost</span><span class="pas1-symbol">:</span><span class="pas1-space"> Failed at getting response</span><span class="pas1-symbol">:</span><span class="pas1-number">403</span><span class="pas1-comment">{
  &quot;error&quot;: {
    &quot;code&quot;: 403,
    &quot;message&quot;: &quot;The request is missing a valid API key.&quot;,
    &quot;status&quot;: &quot;PERMISSION_DENIED&quot;
  }
</span><span class="pas1-symbol">}

</span><span class="pas1-identifier">GPost</span><span class="pas1-symbol">:</span><span class="pas1-space"> Failed at getting response</span><span class="pas1-symbol">:</span><span class="pas1-number">400</span><span class="pas1-comment">{
  &quot;error&quot;: {
    &quot;code&quot;: 400,
    &quot;message&quot;: &quot;API key not valid. Please pass a valid API key.&quot;,
    &quot;status&quot;: &quot;INVALID_ARGUMENT&quot;,
    &quot;details&quot;: [
      {
        &quot;@type&quot;: &quot;type.googleapis.com/google.rpc.ErrorInfo&quot;,
        &quot;reason&quot;: &quot;API_KEY_INVALID&quot;,
        &quot;domain&quot;: &quot;googleapis.com&quot;,
        &quot;metadata&quot;: {
          &quot;service&quot;: &quot;safebrowsing.googleapis.com&quot;
        }
</span><span class="pas1-space">      </span><span class="pas1-symbol">}
</span><span class="pas1-space">    </span><span class="pas1-symbol">]
</span><span class="pas1-space">  </span><span class="pas1-symbol">}
}

</span><span class="pas1-identifier">GPost</span><span class="pas1-symbol">:</span><span class="pas1-space"> Failed at getting response</span><span class="pas1-symbol">:</span><span class="pas1-number">403</span><span class="pas1-comment">{
  &quot;error&quot;: {
    &quot;code&quot;: 403,
    &quot;message&quot;: &quot;Safe Browsing API has not been used in project 338972382324 before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/safebrowsing.googleapis.com/overview?project=338972382324 then retry. If you enabled this API recently, wait a few minutes for the action to propagate to our systems and retry.&quot;,
    &quot;status&quot;: &quot;PERMISSION_DENIED&quot;,
    &quot;details&quot;: [
      {
        &quot;@type&quot;: &quot;type.googleapis.com/google.rpc.Help&quot;,
        &quot;links&quot;: [
          {
            &quot;description&quot;: &quot;Google developers console API activation&quot;,
            &quot;url&quot;: &quot;https://console.developers.google.com/apis/api/safebrowsing.googleapis.com/overview?project=338972382324&quot;
          }
</span><span class="pas1-space">        </span><span class="pas1-symbol">]
</span><span class="pas1-space">      </span><span class="pas1-symbol">},
</span><span class="pas1-space">      </span><span class="pas1-comment">{
        &quot;@type&quot;: &quot;type.googleapis.com/google.rpc.ErrorInfo&quot;,
        &quot;reason&quot;: &quot;SERVICE_DISABLED&quot;,
        &quot;domain&quot;: &quot;googleapis.com&quot;,
        &quot;metadata&quot;: {
          &quot;service&quot;: &quot;safebrowsing.googleapis.com&quot;,
          &quot;consumer&quot;: &quot;projects/338972382324&quot;
        }
</span><span class="pas1-space">      </span><span class="pas1-symbol">}
</span><span class="pas1-space">    </span><span class="pas1-symbol">]
</span><span class="pas1-space">  </span><span class="pas1-symbol">}
}

</span><span class="pas1-identifier">https</span><span class="pas1-symbol">:</span><span class="pas1-comment">//stackoverflow.com/questions/5661596/do-i-need-a-content-type-header-for-http-get-requests

</span><span class="pas1-reservedword">As</span><span class="pas1-space"> </span><span class="pas1-reservedword">far</span><span class="pas1-space"> </span><span class="pas1-reservedword">as</span><span class="pas1-space"> I understood there are two places where </span><span class="pas1-reservedword">to</span><span class="pas1-space"> </span><span class="pas1-reservedword">set</span><span class="pas1-space"> the content </span><span class="pas1-reservedword">type</span><span class="pas1-symbol">:

</span><span class="pas1-space">    The client sets a content </span><span class="pas1-reservedword">type</span><span class="pas1-space"> </span><span class="pas1-reservedword">for</span><span class="pas1-space"> the body he </span><span class="pas1-reservedword">is</span><span class="pas1-space"> sending </span><span class="pas1-reservedword">to</span><span class="pas1-space"> the server </span><span class="pas1-symbol">(</span><span class="pas1-identifier">e</span><span class="pas1-symbol">.</span><span class="pas1-identifier">g</span><span class="pas1-symbol">.</span><span class="pas1-space"> </span><span class="pas1-reservedword">for</span><span class="pas1-space"> post</span><span class="pas1-symbol">)
</span><span class="pas1-space">    The server sets a content </span><span class="pas1-reservedword">type</span><span class="pas1-space"> </span><span class="pas1-reservedword">for</span><span class="pas1-space"> the response</span><span class="pas1-symbol">.

</span><span class="pas1-space">    A sender that generates a </span><span class="pas1-reservedword">message</span><span class="pas1-space"> containing a payload body SHOULD generate a Content</span><span class="pas1-symbol">-</span><span class="pas1-reservedword">Type</span><span class="pas1-space"> header field </span><span class="pas1-reservedword">in</span><span class="pas1-space"> that </span><span class="pas1-reservedword">message</span><span class="pas1-space"> unless the intended media </span><span class="pas1-reservedword">type</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> the enclosed representation </span><span class="pas1-reservedword">is</span><span class="pas1-space"> unknown </span><span class="pas1-reservedword">to</span><span class="pas1-space"> the sender</span><span class="pas1-symbol">.</span><span class="pas1-space"> </span><span class="pas1-reservedword">If</span><span class="pas1-space"> a Content</span><span class="pas1-symbol">-</span><span class="pas1-reservedword">Type</span><span class="pas1-space"> header field </span><span class="pas1-reservedword">is</span><span class="pas1-space"> </span><span class="pas1-reservedword">not</span><span class="pas1-space"> present</span><span class="pas1-symbol">,</span><span class="pas1-space"> the recipient MAY either assume a media </span><span class="pas1-reservedword">type</span><span class="pas1-space"> </span><span class="pas1-reservedword">of</span><span class="pas1-space"> </span><span class="pas1-symbol">&quot;</span><span class="pas1-identifier">application</span><span class="pas1-symbol">/</span><span class="pas1-identifier">octet</span><span class="pas1-symbol">-</span><span class="pas1-identifier">stream</span><span class="pas1-symbol">&quot;</span><span class="pas1-space"> </span><span class="pas1-symbol">([</span><span class="pas1-identifier">RFC2046</span><span class="pas1-symbol">],</span><span class="pas1-space"> Section </span><span class="pas1-float">4.5.1</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">or</span><span class="pas1-space"> examine the data </span><span class="pas1-reservedword">to</span><span class="pas1-space"> determine its </span><span class="pas1-reservedword">type</span><span class="pas1-symbol">.

</span><span class="pas1-reservedword">It</span><span class="pas1-space"> means that the Content</span><span class="pas1-symbol">-</span><span class="pas1-reservedword">Type</span><span class="pas1-space"> HTTP header should be </span><span class="pas1-reservedword">set</span><span class="pas1-space"> only </span><span class="pas1-reservedword">for</span><span class="pas1-space"> PUT </span><span class="pas1-reservedword">and</span><span class="pas1-space"> POST requests</span><span class="pas1-symbol">.

</span><span class="pas1-identifier">GET requests can have </span><span class="pas1-symbol">&quot;</span><span class="pas1-identifier">Accept</span><span class="pas1-symbol">&quot;</span><span class="pas1-space"> headers</span><span class="pas1-symbol">,</span><span class="pas1-space"> which say which types </span><span class="pas1-reservedword">of</span><span class="pas1-space"> content the client understands</span><span class="pas1-symbol">.</span><span class="pas1-space"> The server can </span><span class="pas1-reservedword">then</span><span class="pas1-space"> use that </span><span class="pas1-reservedword">to</span><span class="pas1-space"> decide which content </span><span class="pas1-reservedword">type</span><span class="pas1-space"> </span><span class="pas1-reservedword">to</span><span class="pas1-space"> send back</span><span class="pas1-symbol">.

</span><span class="pas1-identifier">writeln</span><span class="pas1-symbol">(</span><span class="pas1-identifier">GETDOSOutput</span><span class="pas1-symbol">(</span><span class="pas1-string">'cmd.exe /c wmic cpu get architecture'</span><span class="pas1-symbol">,</span><span class="pas1-string">'C:\'</span><span class="pas1-symbol">));
</span><span class="pas1-space">    writeln</span><span class="pas1-symbol">(</span><span class="pas1-identifier">GETDOSOutput</span><span class="pas1-symbol">(</span><span class="pas1-string">'cmd.exe /c wmic cpu get name'</span><span class="pas1-symbol">,</span><span class="pas1-string">'C:\'</span><span class="pas1-symbol">));
</span><span class="pas1-space">    </span><span class="pas1-comment">//to monitor tcp spyware over PID - process ID
</span><span class="pas1-space">    </span><span class="pas1-reservedword">memo2</span><span class="pas1-symbol">.</span><span class="pas1-identifier">setFocus</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">repeat
</span><span class="pas1-space">      writeln</span><span class="pas1-symbol">(</span><span class="pas1-identifier">GETDOSOutput</span><span class="pas1-symbol">(</span><span class="pas1-string">'cmd.exe /c netstat -o'</span><span class="pas1-symbol">,</span><span class="pas1-string">'C:\'</span><span class="pas1-symbol">));
</span><span class="pas1-space">      </span><span class="pas1-reservedword">memo2</span><span class="pas1-symbol">.</span><span class="pas1-identifier">color</span><span class="pas1-symbol">:=</span><span class="pas1-space"> clsilver</span><span class="pas1-symbol">;
</span><span class="pas1-space">      sleep</span><span class="pas1-symbol">(</span><span class="pas1-number">2000</span><span class="pas1-symbol">)
</span><span class="pas1-space">      </span><span class="pas1-reservedword">memo2</span><span class="pas1-symbol">.</span><span class="pas1-identifier">color</span><span class="pas1-symbol">:=</span><span class="pas1-space"> clyellow</span><span class="pas1-symbol">;</span><span class="pas1-space">    
    </span><span class="pas1-reservedword">until</span><span class="pas1-space"> isKeyPressed</span><span class="pas1-symbol">;</span><span class="pas1-space">  
    </span><span class="pas1-reservedword">memo2</span><span class="pas1-symbol">.</span><span class="pas1-identifier">color</span><span class="pas1-symbol">:=</span><span class="pas1-space"> clwhite</span><span class="pas1-symbol">;</span><span class="pas1-space">    
    writeln</span><span class="pas1-symbol">(</span><span class="pas1-identifier">SysErrorMessage</span><span class="pas1-symbol">(</span><span class="pas1-identifier">GetLastError</span><span class="pas1-symbol">))

</span><span class="pas1-space"> </span><span class="pas1-reservedword">Doc</span><span class="pas1-symbol">:</span><span class="pas1-space"> TALWininetHttpClient
 
 TALWinInetHttpClient </span><span class="pas1-reservedword">is</span><span class="pas1-space"> a </span><span class="pas1-reservedword">is</span><span class="pas1-space"> easy </span><span class="pas1-reservedword">to</span><span class="pas1-space"> use WinInet</span><span class="pas1-symbol">-</span><span class="pas1-identifier">based</span><span class="pas1-symbol">.</span><span class="pas1-space"> HTTP client component which allows </span><span class="pas1-reservedword">to</span><span class="pas1-space"> post </span><span class="pas1-reservedword">and</span><span class="pas1-space"> get</span><span class="pas1-symbol">.</span><span class="pas1-space"> any data from the Web via HTTP protocol</span><span class="pas1-symbol">.
</span><span class="pas1-space"> 
 https</span><span class="pas1-symbol">:</span><span class="pas1-comment">//svn.code.sf.net/p/alcinoe/code/demos/ALWinInetHTTPClient/_source/Unit1.pas
</span><span class="pas1-space"> 
 https</span><span class="pas1-symbol">:</span><span class="pas1-comment">//docwiki.embarcadero.com/Libraries/Sydney/en/System.Net.HttpClient.THTTPClient.Post

</span><span class="pas1-identifier">https</span><span class="pas1-symbol">:</span><span class="pas1-comment">//stackoverflow.com/questions/9713491/delphi-decode-json-utf8-escaped-text
</span><span class="pas1-number">12</span><span class="pas1-space"> 
</span><span class="pas1-symbol">\</span><span class="pas1-identifier">uXXXX </span><span class="pas1-reservedword">is</span><span class="pas1-space"> the JSON Unicode escape notation </span><span class="pas1-symbol">(</span><span class="pas1-identifier">X </span><span class="pas1-reservedword">is</span><span class="pas1-space"> hexadecimal</span><span class="pas1-symbol">).


</span><span class="pas1-space">  </span><span class="pas1-reservedword">ref</span><span class="pas1-symbol">:</span><span class="pas1-space">  
</span><span class="pas1-symbol">--------------------------------------------------------
</span><span class="pas1-identifier">TWinApiDownload </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-reservedword">class</span><span class="pas1-symbol">(</span><span class="pas1-identifier">TObject</span><span class="pas1-symbol">)
</span><span class="pas1-space">  </span><span class="pas1-reservedword">private
</span><span class="pas1-space">    fEventWorkStart </span><span class="pas1-symbol">:</span><span class="pas1-space"> TEventWorkStart</span><span class="pas1-symbol">;
</span><span class="pas1-space">    fEventWork </span><span class="pas1-symbol">:</span><span class="pas1-space"> TEventWork</span><span class="pas1-symbol">;
</span><span class="pas1-space">    fEventWorkEnd </span><span class="pas1-symbol">:</span><span class="pas1-space"> TEventWorkEnd</span><span class="pas1-symbol">;
</span><span class="pas1-space">    fEventError </span><span class="pas1-symbol">:</span><span class="pas1-space"> TEventError</span><span class="pas1-symbol">;
</span><span class="pas1-space">    fURL </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-space">    fUserAgent </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-space">    fStop </span><span class="pas1-symbol">:</span><span class="pas1-space"> Boolean</span><span class="pas1-symbol">;
</span><span class="pas1-space">    fActive </span><span class="pas1-symbol">:</span><span class="pas1-space"> Boolean</span><span class="pas1-symbol">;
</span><span class="pas1-space">    fCachingEnabled </span><span class="pas1-symbol">:</span><span class="pas1-space"> Boolean</span><span class="pas1-symbol">;
</span><span class="pas1-space">    fProgressUpdateInterval </span><span class="pas1-symbol">:</span><span class="pas1-space"> Cardinal</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">function</span><span class="pas1-space"> GetIsActive </span><span class="pas1-symbol">:</span><span class="pas1-space"> Boolean</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">public
</span><span class="pas1-space">    </span><span class="pas1-reservedword">constructor</span><span class="pas1-space"> Create</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">destructor</span><span class="pas1-space"> Destroy</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-reservedword">override</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">function</span><span class="pas1-space"> CheckURL</span><span class="pas1-symbol">(</span><span class="pas1-identifier">aURL</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> Integer</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">function</span><span class="pas1-space"> Download</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Stream </span><span class="pas1-symbol">:</span><span class="pas1-space"> TStream</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> Integer</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-reservedword">overload</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">function</span><span class="pas1-space"> Download</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">var</span><span class="pas1-space"> res </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> Integer</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-reservedword">overload</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">function</span><span class="pas1-space"> ErrorCodeToMessageString</span><span class="pas1-symbol">(</span><span class="pas1-identifier">aErrorCode </span><span class="pas1-symbol">:</span><span class="pas1-space"> Integer</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> Stop</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> Clear</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">property</span><span class="pas1-space"> UserAgent </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-space"> </span><span class="pas1-reservedword">read</span><span class="pas1-space"> fUserAgent </span><span class="pas1-reservedword">write</span><span class="pas1-space"> fUserAgent</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">property</span><span class="pas1-space"> URL </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-space"> </span><span class="pas1-reservedword">read</span><span class="pas1-space"> fURL </span><span class="pas1-reservedword">write</span><span class="pas1-space"> fURL</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">property</span><span class="pas1-space"> DownloadActive </span><span class="pas1-symbol">:</span><span class="pas1-space"> Boolean </span><span class="pas1-reservedword">read</span><span class="pas1-space"> GetIsActive</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">property</span><span class="pas1-space"> CachingEnabled </span><span class="pas1-symbol">:</span><span class="pas1-space"> Boolean </span><span class="pas1-reservedword">read</span><span class="pas1-space"> fCachingEnabled </span><span class="pas1-reservedword">write</span><span class="pas1-space"> fCachingEnabled</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">property</span><span class="pas1-space"> UpdateInterval</span><span class="pas1-symbol">:</span><span class="pas1-identifier">Cardinal </span><span class="pas1-reservedword">read</span><span class="pas1-space"> fProgressUpdateInterval </span><span class="pas1-reservedword">write</span><span class="pas1-space"> fProgressUpdateInterval</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">property</span><span class="pas1-space"> OnWorkStart </span><span class="pas1-symbol">:</span><span class="pas1-space"> TEventWorkStart </span><span class="pas1-reservedword">read</span><span class="pas1-space"> fEventWorkStart </span><span class="pas1-reservedword">write</span><span class="pas1-space"> fEventWorkStart</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">property</span><span class="pas1-space"> OnWork </span><span class="pas1-symbol">:</span><span class="pas1-space"> TEventWork </span><span class="pas1-reservedword">read</span><span class="pas1-space"> fEventWork </span><span class="pas1-reservedword">write</span><span class="pas1-space"> fEventWork</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">property</span><span class="pas1-space"> OnWorkEnd </span><span class="pas1-symbol">:</span><span class="pas1-space"> TEventWorkEnd </span><span class="pas1-reservedword">read</span><span class="pas1-space"> fEventWorkEnd </span><span class="pas1-reservedword">write</span><span class="pas1-space"> fEventWorkEnd</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">property</span><span class="pas1-space"> OnError </span><span class="pas1-symbol">:</span><span class="pas1-space"> TEventError </span><span class="pas1-reservedword">read</span><span class="pas1-space"> fEventError </span><span class="pas1-reservedword">write</span><span class="pas1-space"> fEventError</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;</span><span class="pas1-space">  
  
  
</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> SIRegister_TJSONObject</span><span class="pas1-symbol">(</span><span class="pas1-identifier">CL</span><span class="pas1-symbol">:</span><span class="pas1-space"> TPSPascalCompiler</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  </span><span class="pas1-comment">//with RegClassS(CL,'TZAbstractObject', 'TJSONObject') do
</span><span class="pas1-space">  </span><span class="pas1-reservedword">with</span><span class="pas1-space"> CL</span><span class="pas1-symbol">.</span><span class="pas1-identifier">AddClassN</span><span class="pas1-symbol">(</span><span class="pas1-identifier">CL</span><span class="pas1-symbol">.</span><span class="pas1-identifier">FindClass</span><span class="pas1-symbol">(</span><span class="pas1-string">'TZAbstractObject'</span><span class="pas1-symbol">),</span><span class="pas1-string">'TJSONObject'</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">do
</span><span class="pas1-space">  </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    RegisterMethod</span><span class="pas1-symbol">(</span><span class="pas1-string">'Constructor create;'</span><span class="pas1-symbol">);
</span><span class="pas1-space">    RegisterMethod</span><span class="pas1-symbol">(</span><span class="pas1-string">'Constructor create1( jo : TJSONObject; sa : array of string);'</span><span class="pas1-symbol">);
</span><span class="pas1-space">    RegisterMethod</span><span class="pas1-symbol">(</span><span class="pas1-string">'Constructor create2( x : JSONTokener);'</span><span class="pas1-symbol">);
</span><span class="pas1-space">    RegisterMethod</span><span class="pas1-symbol">(</span><span class="pas1-string">'Constructor create3( map : TStringList);'</span><span class="pas1-symbol">);
</span><span class="pas1-space">    RegisterMethod</span><span class="pas1-symbol">(</span><span class="pas1-string">'Constructor create4( s : string);'</span><span class="pas1-symbol">);
</span><span class="pas1-space">    RegisterMethod</span><span class="pas1-symbol">(</span><span class="pas1-string">'Procedure clean'</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> clone </span><span class="pas1-symbol">:</span><span class="pas1-space"> TZAbstractObject</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> accumulate</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-space"> value </span><span class="pas1-symbol">:</span><span class="pas1-space"> TZAbstractObject</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONObject</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> get</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> TZAbstractObject</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> getBoolean</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> boolean</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> getDouble</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> double</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> getInt</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> getJSONArray</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONArray</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> getJSONObject</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONObject</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> getString</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> has</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> boolean</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> isNull</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> boolean</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> keys </span><span class="pas1-symbol">:</span><span class="pas1-space"> TStringList</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> length </span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> names </span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONArray</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> numberToString</span><span class="pas1-symbol">(</span><span class="pas1-space"> n </span><span class="pas1-symbol">:</span><span class="pas1-space"> _Number</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> valueToString</span><span class="pas1-symbol">(</span><span class="pas1-space"> value </span><span class="pas1-symbol">:</span><span class="pas1-space"> TZAbstractObject</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> valueToString1</span><span class="pas1-symbol">(</span><span class="pas1-space"> value </span><span class="pas1-symbol">:</span><span class="pas1-space"> TZAbstractObject</span><span class="pas1-symbol">;</span><span class="pas1-space"> indentFactor</span><span class="pas1-symbol">,</span><span class="pas1-space"> indent </span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> opt</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> TZAbstractObject</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> optBoolean</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> boolean</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> optBoolean1</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-space"> defaultValue </span><span class="pas1-symbol">:</span><span class="pas1-space"> boolean</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> boolean</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> optDouble</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> double</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> optDouble1</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-space"> defaultValue </span><span class="pas1-symbol">:</span><span class="pas1-space"> double</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> double</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> optInt</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> optInt1</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-space"> defaultValue </span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> optString</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> optString1</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-space"> defaultValue </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> optJSONArray</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONArray</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> optJSONObject</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONObject</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> put</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-space"> value </span><span class="pas1-symbol">:</span><span class="pas1-space"> boolean</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONObject</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> put1</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-space"> value </span><span class="pas1-symbol">:</span><span class="pas1-space"> double</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONObject</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> put2</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-space"> value </span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONObject</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> put3</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-space"> value </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONObject</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> put4</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-space"> value </span><span class="pas1-symbol">:</span><span class="pas1-space"> TZAbstractObject</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONObject</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> putOpt</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-space"> value </span><span class="pas1-symbol">:</span><span class="pas1-space"> TZAbstractObject</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONObject</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> quote</span><span class="pas1-symbol">(</span><span class="pas1-space"> s </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> remove</span><span class="pas1-symbol">(</span><span class="pas1-space"> key </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> TZAbstractObject</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Procedure</span><span class="pas1-space"> assignTo</span><span class="pas1-symbol">(</span><span class="pas1-space"> json </span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONObject</span><span class="pas1-symbol">)</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> toJSONArray</span><span class="pas1-symbol">(</span><span class="pas1-space"> names </span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONArray</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> TJSONArray</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> toString1</span><span class="pas1-symbol">(</span><span class="pas1-space"> indentFactor </span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    </span><span class="pas1-reservedword">Function</span><span class="pas1-space"> toString2</span><span class="pas1-symbol">(</span><span class="pas1-space"> indentFactor</span><span class="pas1-symbol">,</span><span class="pas1-space"> indent </span><span class="pas1-symbol">:</span><span class="pas1-space"> integer</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-string">');
</span><span class="pas1-space">    RegisterMethod</span><span class="pas1-symbol">(</span><span class="pas1-string">'Function NULL : NULL'</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">  
E</span><span class="pas1-symbol">:</span><span class="pas1-space"> Exception</span><span class="pas1-symbol">:</span><span class="pas1-space"> Access violation at address </span><span class="pas1-number">01</span><span class="pas1-identifier">F0CC04 </span><span class="pas1-reservedword">in</span><span class="pas1-space"> module </span><span class="pas1-string">'maXbox4.exe'</span><span class="pas1-symbol">.</span><span class="pas1-space"> Read </span><span class="pas1-reservedword">of</span><span class="pas1-space"> address </span><span class="pas1-float">00000000.
</span><span class="pas1-identifier">Failed at getting response</span><span class="pas1-symbol">:</span><span class="pas1-number">415</span><span class="pas1-identifier">HTTP </span><span class="pas1-number">415</span><span class="pas1-space"> Unsupported Media </span><span class="pas1-reservedword">Type
</span><span class="pas1-identifier">Failed at getting response</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">503503</span><span class="pas1-space"> </span><span class="pas1-symbol">-</span><span class="pas1-space"> Service Unavailable
  
C</span><span class="pas1-symbol">:\</span><span class="pas1-reservedword">maXbox</span><span class="pas1-symbol">\</span><span class="pas1-identifier">works2021</span><span class="pas1-symbol">\</span><span class="pas1-identifier">maxbox4</span><span class="pas1-symbol">&gt;</span><span class="pas1-identifier">py
Python </span><span class="pas1-float">3.7.3</span><span class="pas1-space"> </span><span class="pas1-symbol">(</span><span class="pas1-identifier">v3</span><span class="pas1-symbol">.</span><span class="pas1-float">7.3</span><span class="pas1-symbol">:</span><span class="pas1-identifier">ef4ec6ed12</span><span class="pas1-symbol">,</span><span class="pas1-space"> Mar </span><span class="pas1-number">25</span><span class="pas1-space"> </span><span class="pas1-number">2019</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">22</span><span class="pas1-symbol">:</span><span class="pas1-number">22</span><span class="pas1-symbol">:</span><span class="pas1-number">05</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-symbol">[</span><span class="pas1-identifier">MSC v</span><span class="pas1-symbol">.</span><span class="pas1-number">1916</span><span class="pas1-space"> </span><span class="pas1-number">64</span><span class="pas1-space"> bit </span><span class="pas1-symbol">(</span><span class="pas1-identifier">AMD6
</span><span class="pas1-number">4</span><span class="pas1-symbol">)]</span><span class="pas1-space"> </span><span class="pas1-reservedword">on</span><span class="pas1-space"> win32
</span><span class="pas1-reservedword">Type</span><span class="pas1-space"> </span><span class="pas1-symbol">&quot;</span><span class="pas1-identifier">help</span><span class="pas1-symbol">&quot;,</span><span class="pas1-space"> </span><span class="pas1-symbol">&quot;</span><span class="pas1-identifier">copyright</span><span class="pas1-symbol">&quot;,</span><span class="pas1-space"> </span><span class="pas1-symbol">&quot;</span><span class="pas1-identifier">credits</span><span class="pas1-symbol">&quot;</span><span class="pas1-space"> </span><span class="pas1-reservedword">or</span><span class="pas1-space"> </span><span class="pas1-symbol">&quot;</span><span class="pas1-identifier">license</span><span class="pas1-symbol">&quot;</span><span class="pas1-space"> </span><span class="pas1-reservedword">for</span><span class="pas1-space"> more information</span><span class="pas1-symbol">.
&gt;&gt;&gt;</span><span class="pas1-space"> import http</span><span class="pas1-symbol">.</span><span class="pas1-identifier">client
</span><span class="pas1-symbol">&gt;&gt;&gt;
&gt;&gt;&gt;</span><span class="pas1-space"> conn </span><span class="pas1-symbol">=</span><span class="pas1-space"> http</span><span class="pas1-symbol">.</span><span class="pas1-identifier">client</span><span class="pas1-symbol">.</span><span class="pas1-identifier">HTTPSConnection</span><span class="pas1-symbol">(&quot;</span><span class="pas1-identifier">nlp</span><span class="pas1-symbol">-</span><span class="pas1-identifier">translation</span><span class="pas1-symbol">.</span><span class="pas1-identifier">p</span><span class="pas1-symbol">.</span><span class="pas1-identifier">rapidapi</span><span class="pas1-symbol">.</span><span class="pas1-identifier">com</span><span class="pas1-symbol">&quot;)
&gt;&gt;&gt;</span><span class="pas1-space"> payload </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-symbol">&quot;</span><span class="pas1-identifier">text</span><span class="pas1-symbol">=</span><span class="pas1-identifier">Hello</span><span class="pas1-symbol">%</span><span class="pas1-number">20</span><span class="pas1-identifier">World</span><span class="pas1-symbol">&amp;</span><span class="pas1-reservedword">to</span><span class="pas1-symbol">=</span><span class="pas1-identifier">es</span><span class="pas1-symbol">&amp;</span><span class="pas1-identifier">from</span><span class="pas1-symbol">=</span><span class="pas1-identifier">en</span><span class="pas1-symbol">&quot;
&gt;&gt;&gt;</span><span class="pas1-space"> headers </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-comment">{
...     'content-type': &quot;application/x-www-form-urlencoded&quot;,
...     'X-RapidAPI-Host': &quot;nlp-translation.p.rapidapi.com&quot;,
...     'X-RapidAPI-Key': &quot;df61a35825msh66c9514de953a7ap192bcfjsn16a3d1018ce3&quot;
...     }
</span><span class="pas1-symbol">&gt;&gt;&gt;</span><span class="pas1-space"> conn</span><span class="pas1-symbol">.</span><span class="pas1-identifier">request</span><span class="pas1-symbol">(&quot;</span><span class="pas1-identifier">POST</span><span class="pas1-symbol">&quot;,</span><span class="pas1-space"> </span><span class="pas1-symbol">&quot;/</span><span class="pas1-identifier">v1</span><span class="pas1-symbol">/</span><span class="pas1-identifier">translate</span><span class="pas1-symbol">&quot;,</span><span class="pas1-space"> payload</span><span class="pas1-symbol">,</span><span class="pas1-space"> headers</span><span class="pas1-symbol">)
&gt;&gt;&gt;
&gt;&gt;&gt;</span><span class="pas1-space"> res </span><span class="pas1-symbol">=</span><span class="pas1-space"> conn</span><span class="pas1-symbol">.</span><span class="pas1-identifier">getresponse</span><span class="pas1-symbol">()
&gt;&gt;&gt;</span><span class="pas1-space"> data </span><span class="pas1-symbol">=</span><span class="pas1-space"> res</span><span class="pas1-symbol">.</span><span class="pas1-identifier">read</span><span class="pas1-symbol">()
&gt;&gt;&gt;</span><span class="pas1-space"> print</span><span class="pas1-symbol">(</span><span class="pas1-identifier">data</span><span class="pas1-symbol">.</span><span class="pas1-identifier">decode</span><span class="pas1-symbol">(&quot;</span><span class="pas1-identifier">utf</span><span class="pas1-symbol">-</span><span class="pas1-number">8</span><span class="pas1-symbol">&quot;))
</span><span class="pas1-comment">{&quot;message&quot;:&quot;You are not subscribed to this API.&quot;}
</span><span class="pas1-symbol">&gt;&gt;&gt;</span><span class="pas1-space"> Failed at getting response</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">503503</span><span class="pas1-space"> </span><span class="pas1-symbol">-</span><span class="pas1-space"> Service Unavailable
  
Passwort checker</span><span class="pas1-symbol">?</span><span class="pas1-space"> https</span><span class="pas1-symbol">:</span><span class="pas1-comment">//haveibeenpwned.com
</span><span class="pas1-identifier">https</span><span class="pas1-symbol">:</span><span class="pas1-comment">//dnslytics.com/spf-lookup  

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> RunDosInMemo</span><span class="pas1-symbol">(</span><span class="pas1-identifier">DosApp</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-space"> AMemo</span><span class="pas1-symbol">:</span><span class="pas1-identifier">TMemo</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">const
</span><span class="pas1-space">    READ_BUFFER_SIZE </span><span class="pas1-symbol">=</span><span class="pas1-space"> </span><span class="pas1-number">2400</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">var
</span><span class="pas1-space">    Security</span><span class="pas1-symbol">:</span><span class="pas1-space"> TSecurityAttributes</span><span class="pas1-symbol">;
</span><span class="pas1-space">    readableEndOfPipe</span><span class="pas1-symbol">,</span><span class="pas1-space"> writeableEndOfPipe</span><span class="pas1-symbol">:</span><span class="pas1-space"> THandle</span><span class="pas1-symbol">;
</span><span class="pas1-space">    start</span><span class="pas1-symbol">:</span><span class="pas1-space"> TStartUpInfo</span><span class="pas1-symbol">;
</span><span class="pas1-space">    ProcessInfo</span><span class="pas1-symbol">:</span><span class="pas1-space"> TProcessInformation</span><span class="pas1-symbol">;
</span><span class="pas1-space">    Buffer</span><span class="pas1-symbol">:</span><span class="pas1-space"> PAnsiChar</span><span class="pas1-symbol">;
</span><span class="pas1-space">    BytesRead</span><span class="pas1-symbol">:</span><span class="pas1-space"> DWORD</span><span class="pas1-symbol">;
</span><span class="pas1-space">    AppRunning</span><span class="pas1-symbol">:</span><span class="pas1-space"> DWORD</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    Security</span><span class="pas1-symbol">.</span><span class="pas1-identifier">nLength </span><span class="pas1-symbol">:=</span><span class="pas1-space"> SizeOf</span><span class="pas1-symbol">(</span><span class="pas1-identifier">TSecurityAttributes</span><span class="pas1-symbol">);
</span><span class="pas1-space">    Security</span><span class="pas1-symbol">.</span><span class="pas1-identifier">bInheritHandle </span><span class="pas1-symbol">:=</span><span class="pas1-space"> True</span><span class="pas1-symbol">;
</span><span class="pas1-space">    Security</span><span class="pas1-symbol">.</span><span class="pas1-identifier">lpSecurityDescriptor </span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-reservedword">nil</span><span class="pas1-symbol">;

</span><span class="pas1-space">    </span><span class="pas1-reservedword">if</span><span class="pas1-space"> CreatePipe</span><span class="pas1-symbol">(</span><span class="pas1-comment">{var}</span><span class="pas1-identifier">readableEndOfPipe</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-comment">{var}</span><span class="pas1-identifier">writeableEndOfPipe</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-symbol">@</span><span class="pas1-identifier">Security</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">then
</span><span class="pas1-space">    </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">        Buffer </span><span class="pas1-symbol">:=</span><span class="pas1-space"> AllocMem</span><span class="pas1-symbol">(</span><span class="pas1-identifier">READ_BUFFER_SIZE</span><span class="pas1-symbol">+</span><span class="pas1-number">1</span><span class="pas1-symbol">);
</span><span class="pas1-space">        FillChar</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Start</span><span class="pas1-symbol">,</span><span class="pas1-space"> Sizeof</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Start</span><span class="pas1-symbol">),</span><span class="pas1-space"> </span><span class="pas1-character">#0</span><span class="pas1-symbol">);
</span><span class="pas1-space">        start</span><span class="pas1-symbol">.</span><span class="pas1-identifier">cb </span><span class="pas1-symbol">:=</span><span class="pas1-space"> SizeOf</span><span class="pas1-symbol">(</span><span class="pas1-identifier">start</span><span class="pas1-symbol">);

</span><span class="pas1-space">        </span><span class="pas1-comment">// Set up members of the STARTUPINFO structure.
</span><span class="pas1-space">        </span><span class="pas1-comment">// This structure specifies the STDIN and STDOUT handles for redirection.
</span><span class="pas1-space">        </span><span class="pas1-comment">// - Redirect the output and error to the writeable end of our pipe.
</span><span class="pas1-space">        </span><span class="pas1-comment">// - We must still supply a valid StdInput handle (because we used STARTF_USESTDHANDLES to swear that all three handles will be valid)
</span><span class="pas1-space">        start</span><span class="pas1-symbol">.</span><span class="pas1-identifier">dwFlags </span><span class="pas1-symbol">:=</span><span class="pas1-space"> start</span><span class="pas1-symbol">.</span><span class="pas1-identifier">dwFlags </span><span class="pas1-reservedword">or</span><span class="pas1-space"> STARTF_USESTDHANDLES</span><span class="pas1-symbol">;
</span><span class="pas1-space">        start</span><span class="pas1-symbol">.</span><span class="pas1-identifier">hStdInput </span><span class="pas1-symbol">:=</span><span class="pas1-space"> GetStdHandle</span><span class="pas1-symbol">(</span><span class="pas1-identifier">STD_INPUT_HANDLE</span><span class="pas1-symbol">);</span><span class="pas1-space"> </span><span class="pas1-comment">//we're not redirecting stdInput; but we still have to give it a valid handle
</span><span class="pas1-space">        start</span><span class="pas1-symbol">.</span><span class="pas1-identifier">hStdOutput </span><span class="pas1-symbol">:=</span><span class="pas1-space"> writeableEndOfPipe</span><span class="pas1-symbol">;</span><span class="pas1-space"> </span><span class="pas1-comment">//we give the writeable end of the pipe to the child process; we read from the readable end
</span><span class="pas1-space">        start</span><span class="pas1-symbol">.</span><span class="pas1-identifier">hStdError </span><span class="pas1-symbol">:=</span><span class="pas1-space"> writeableEndOfPipe</span><span class="pas1-symbol">;
</span><span class="pas1-space">        </span><span class="pas1-comment">//We can also choose to say that the wShowWindow member contains a value.
</span><span class="pas1-space">        </span><span class="pas1-comment">//In our case we want to force the console window to be hidden.
</span><span class="pas1-space">        start</span><span class="pas1-symbol">.</span><span class="pas1-identifier">dwFlags </span><span class="pas1-symbol">:=</span><span class="pas1-space"> start</span><span class="pas1-symbol">.</span><span class="pas1-identifier">dwFlags </span><span class="pas1-symbol">+</span><span class="pas1-space"> STARTF_USESHOWWINDOW</span><span class="pas1-symbol">;
</span><span class="pas1-space">        start</span><span class="pas1-symbol">.</span><span class="pas1-identifier">wShowWindow </span><span class="pas1-symbol">:=</span><span class="pas1-space"> SW_HIDE</span><span class="pas1-symbol">;

</span><span class="pas1-space">        </span><span class="pas1-comment">// Don't forget to set up members of the PROCESS_INFORMATION structure.
</span><span class="pas1-space">        ProcessInfo </span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-reservedword">Default</span><span class="pas1-symbol">(</span><span class="pas1-identifier">TProcessInformation</span><span class="pas1-symbol">);

</span><span class="pas1-space">        </span><span class="pas1-comment">//WARNING: The unicode version of CreateProcess (CreateProcessW) can modify the command-line &quot;DosApp&quot; string. 
</span><span class="pas1-space">        </span><span class="pas1-comment">//Therefore &quot;DosApp&quot; cannot be a pointer to read-only memory, or an ACCESS_VIOLATION will occur.
</span><span class="pas1-space">        </span><span class="pas1-comment">//We can ensure it's not read-only with the RTL function: UniqueString
</span><span class="pas1-space">        UniqueString</span><span class="pas1-symbol">(</span><span class="pas1-comment">{var}</span><span class="pas1-identifier">DosApp</span><span class="pas1-symbol">);

</span><span class="pas1-space">        </span><span class="pas1-reservedword">if</span><span class="pas1-space"> CreateProcess</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">nil</span><span class="pas1-symbol">,</span><span class="pas1-space"> PChar</span><span class="pas1-symbol">(</span><span class="pas1-identifier">DosApp</span><span class="pas1-symbol">),</span><span class="pas1-space"> </span><span class="pas1-reservedword">nil</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-reservedword">nil</span><span class="pas1-symbol">,</span><span class="pas1-space"> True</span><span class="pas1-symbol">,</span><span class="pas1-space"> NORMAL_PRIORITY_CLASS</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-reservedword">nil</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-reservedword">nil</span><span class="pas1-symbol">,</span><span class="pas1-space"> start</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-comment">{var}</span><span class="pas1-identifier">ProcessInfo</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">then
</span><span class="pas1-space">        </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">            </span><span class="pas1-comment">//Wait for the application to terminate, as it writes it's output to the pipe.
</span><span class="pas1-space">            </span><span class="pas1-comment">//WARNING: If the console app outputs more than 2400 bytes (ReadBuffer),
</span><span class="pas1-space">            </span><span class="pas1-comment">//it will block on writing to the pipe and *never* close.
</span><span class="pas1-space">            </span><span class="pas1-reservedword">repeat
</span><span class="pas1-space">                Apprunning </span><span class="pas1-symbol">:=</span><span class="pas1-space"> WaitForSingleObject</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ProcessInfo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">hProcess</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">100</span><span class="pas1-symbol">);
</span><span class="pas1-space">                Application</span><span class="pas1-symbol">.</span><span class="pas1-identifier">ProcessMessages</span><span class="pas1-symbol">;
</span><span class="pas1-space">            </span><span class="pas1-reservedword">until</span><span class="pas1-space"> </span><span class="pas1-symbol">(</span><span class="pas1-identifier">Apprunning </span><span class="pas1-symbol">&lt;&gt;</span><span class="pas1-space"> WAIT_TIMEOUT</span><span class="pas1-symbol">);

</span><span class="pas1-space">            </span><span class="pas1-comment">//Read the contents of the pipe out of the readable end
</span><span class="pas1-space">            </span><span class="pas1-comment">//WARNING: if the console app never writes anything to the StdOutput, then ReadFile will block and never return
</span><span class="pas1-space">            </span><span class="pas1-reservedword">repeat
</span><span class="pas1-space">                BytesRead </span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">;
</span><span class="pas1-space">                ReadFile</span><span class="pas1-symbol">(</span><span class="pas1-identifier">readableEndOfPipe</span><span class="pas1-symbol">,</span><span class="pas1-space"> Buffer</span><span class="pas1-symbol">[</span><span class="pas1-number">0</span><span class="pas1-symbol">],</span><span class="pas1-space"> READ_BUFFER_SIZE</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-comment">{var}</span><span class="pas1-identifier">BytesRead</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-reservedword">nil</span><span class="pas1-symbol">);
</span><span class="pas1-space">                Buffer</span><span class="pas1-symbol">[</span><span class="pas1-identifier">BytesRead</span><span class="pas1-symbol">]:=</span><span class="pas1-space"> </span><span class="pas1-character">#0</span><span class="pas1-symbol">;
</span><span class="pas1-space">                OemToAnsi</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Buffer</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Buffer</span><span class="pas1-symbol">);
</span><span class="pas1-space">                AMemo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Text </span><span class="pas1-symbol">:=</span><span class="pas1-space"> AMemo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">text </span><span class="pas1-symbol">+</span><span class="pas1-space"> </span><span class="pas1-reservedword">String</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Buffer</span><span class="pas1-symbol">);
</span><span class="pas1-space">            </span><span class="pas1-reservedword">until</span><span class="pas1-space"> </span><span class="pas1-symbol">(</span><span class="pas1-identifier">BytesRead </span><span class="pas1-symbol">&lt;</span><span class="pas1-space"> READ_BUFFER_SIZE</span><span class="pas1-symbol">);
</span><span class="pas1-space">        </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">        FreeMem</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Buffer</span><span class="pas1-symbol">);
</span><span class="pas1-space">        CloseHandle</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ProcessInfo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">hProcess</span><span class="pas1-symbol">);
</span><span class="pas1-space">        CloseHandle</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ProcessInfo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">hThread</span><span class="pas1-symbol">);
</span><span class="pas1-space">        CloseHandle</span><span class="pas1-symbol">(</span><span class="pas1-identifier">readableEndOfPipe</span><span class="pas1-symbol">);
</span><span class="pas1-space">        CloseHandle</span><span class="pas1-symbol">(</span><span class="pas1-identifier">writeableEndOfPipe</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">procedure</span><span class="pas1-space"> TForm1</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Button1Click</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Sender</span><span class="pas1-symbol">:</span><span class="pas1-space"> TObject</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">begin</span><span class="pas1-space"> </span><span class="pas1-comment">{button 1 code}
</span><span class="pas1-space">   RunDosInMemo</span><span class="pas1-symbol">(</span><span class="pas1-string">'chkdsk.exe c:\'</span><span class="pas1-symbol">,</span><span class="pas1-reservedword">Memo1</span><span class="pas1-symbol">);
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-identifier">CL</span><span class="pas1-symbol">.</span><span class="pas1-identifier">AddDelphiFunction</span><span class="pas1-symbol">(</span><span class="pas1-string">'procedure RunDosInMemo(DosApp: string; AMemo:TMemo);'</span><span class="pas1-symbol">);

</span><span class="pas1-identifier">ShellExecute</span><span class="pas1-symbol">(</span><span class="pas1-number">0</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'open'</span><span class="pas1-symbol">,</span><span class="pas1-space"> Pchar</span><span class="pas1-symbol">(</span><span class="pas1-string">'DocumentName.pdf'</span><span class="pas1-symbol">),</span><span class="pas1-space"> </span><span class="pas1-string">''</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">''</span><span class="pas1-symbol">,</span><span class="pas1-space"> SW_SHOWNORMAL</span><span class="pas1-symbol">);

</span><span class="pas1-identifier">work under Windows </span><span class="pas1-number">7</span><span class="pas1-space"> </span><span class="pas1-reservedword">and</span><span class="pas1-space"> </span><span class="pas1-number">8</span><span class="pas1-symbol">,</span><span class="pas1-space"> which would start the Acrobat Reader </span><span class="pas1-reservedword">and</span><span class="pas1-space"> open the </span><span class="pas1-reservedword">file</span><span class="pas1-space"> but under Windows </span><span class="pas1-number">10</span><span class="pas1-space"> this no longer </span><span class="pas1-reservedword">is</span><span class="pas1-space"> the </span><span class="pas1-reservedword">case</span><span class="pas1-symbol">.</span><span class="pas1-space"> So the next step was </span><span class="pas1-reservedword">to</span><span class="pas1-space"> update the call </span><span class="pas1-reservedword">to</span><span class="pas1-space"> use ShellExecuteEX instead</span><span class="pas1-symbol">.

</span><span class="pas1-identifier">ShellInfo </span><span class="pas1-symbol">:=</span><span class="pas1-space"> </span><span class="pas1-reservedword">Default</span><span class="pas1-symbol">(</span><span class="pas1-identifier">TShellExecuteInfo</span><span class="pas1-symbol">);
</span><span class="pas1-identifier">ShellInfo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">cbSize </span><span class="pas1-symbol">:=</span><span class="pas1-space"> SizeOf</span><span class="pas1-symbol">(</span><span class="pas1-identifier">TShellExecuteInfo</span><span class="pas1-symbol">);
</span><span class="pas1-identifier">ShellInfo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">lpFile </span><span class="pas1-symbol">:=</span><span class="pas1-space"> PChar</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Current_Client_Documents </span><span class="pas1-symbol">+</span><span class="pas1-space"> FileName </span><span class="pas1-symbol">+</span><span class="pas1-string">'.pdf'</span><span class="pas1-symbol">);
</span><span class="pas1-identifier">ShellInfo</span><span class="pas1-symbol">.</span><span class="pas1-identifier">nShow </span><span class="pas1-symbol">:=</span><span class="pas1-space"> SW_SHOWNORMAL</span><span class="pas1-symbol">;

</span><span class="pas1-reservedword">try
</span><span class="pas1-identifier">ShellExecuteEx</span><span class="pas1-symbol">(@</span><span class="pas1-identifier">ShellInfo</span><span class="pas1-symbol">);

</span><span class="pas1-identifier">The actual code will prepare the </span><span class="pas1-reservedword">Object</span><span class="pas1-space"> ShellInfo </span><span class="pas1-reservedword">to</span><span class="pas1-space"> contain all </span><span class="pas1-reservedword">of</span><span class="pas1-space"> the necessary data </span><span class="pas1-reservedword">to</span><span class="pas1-space"> start up the Acrobat Reader </span><span class="pas1-reservedword">and</span><span class="pas1-space"> display the generated PDF</span><span class="pas1-symbol">.

</span><span class="pas1-comment">//make a GET request using the WinInet functions
</span><span class="pas1-reservedword">function</span><span class="pas1-space"> Https_Get</span><span class="pas1-symbol">(</span><span class="pas1-reservedword">const</span><span class="pas1-space"> ServerName</span><span class="pas1-symbol">,</span><span class="pas1-identifier">Resource </span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-reservedword">string</span><span class="pas1-symbol">;</span><span class="pas1-reservedword">Var</span><span class="pas1-space"> Response</span><span class="pas1-symbol">:</span><span class="pas1-identifier">AnsiString</span><span class="pas1-symbol">):</span><span class="pas1-space"> Integer</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">const
</span><span class="pas1-space">  BufferSize</span><span class="pas1-symbol">=</span><span class="pas1-number">1024</span><span class="pas1-symbol">*</span><span class="pas1-number">64</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">var
</span><span class="pas1-space">  hInet    </span><span class="pas1-symbol">:</span><span class="pas1-space"> HINTERNET</span><span class="pas1-symbol">;
</span><span class="pas1-space">  hConnect </span><span class="pas1-symbol">:</span><span class="pas1-space"> HINTERNET</span><span class="pas1-symbol">;
</span><span class="pas1-space">  hRequest </span><span class="pas1-symbol">:</span><span class="pas1-space"> HINTERNET</span><span class="pas1-symbol">;
</span><span class="pas1-space">  ErrorCode </span><span class="pas1-symbol">:</span><span class="pas1-space"> Integer</span><span class="pas1-symbol">;
</span><span class="pas1-space">  lpvBuffer </span><span class="pas1-symbol">:</span><span class="pas1-space"> PAnsiChar</span><span class="pas1-symbol">;
</span><span class="pas1-space">  lpdwBufferLength</span><span class="pas1-symbol">:</span><span class="pas1-space"> DWORD</span><span class="pas1-symbol">;
</span><span class="pas1-space">  lpdwReserved    </span><span class="pas1-symbol">:</span><span class="pas1-space"> DWORD</span><span class="pas1-symbol">;
</span><span class="pas1-space">  dwBytesRead     </span><span class="pas1-symbol">:</span><span class="pas1-space"> DWORD</span><span class="pas1-symbol">;
</span><span class="pas1-space">  lpdwNumberOfBytesAvailable</span><span class="pas1-symbol">:</span><span class="pas1-space"> DWORD</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">begin
</span><span class="pas1-space">  Result  </span><span class="pas1-symbol">:=</span><span class="pas1-number">0</span><span class="pas1-symbol">;
</span><span class="pas1-space">  Response</span><span class="pas1-symbol">:=</span><span class="pas1-string">''</span><span class="pas1-symbol">;
</span><span class="pas1-space">  hInet </span><span class="pas1-symbol">:=</span><span class="pas1-space"> InternetOpen</span><span class="pas1-symbol">(</span><span class="pas1-identifier">PChar</span><span class="pas1-symbol">(</span><span class="pas1-identifier">sUserAgent</span><span class="pas1-symbol">),</span><span class="pas1-space"> INTERNET_OPEN_TYPE_PRECONFIG</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-reservedword">nil</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-reservedword">nil</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">);
</span><span class="pas1-space"> 
  </span><span class="pas1-reservedword">if</span><span class="pas1-space"> hInet</span><span class="pas1-symbol">=</span><span class="pas1-reservedword">nil</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">    ErrorCode</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">GetLastError</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">raise</span><span class="pas1-space"> Exception</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Format</span><span class="pas1-symbol">(</span><span class="pas1-string">'InternetOpen Error %d Description %s'</span><span class="pas1-symbol">,
</span><span class="pas1-space">              </span><span class="pas1-symbol">[</span><span class="pas1-identifier">ErrorCode</span><span class="pas1-symbol">,</span><span class="pas1-identifier">GetWinInetError</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ErrorCode</span><span class="pas1-symbol">)]));
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space"> 
  </span><span class="pas1-reservedword">try
</span><span class="pas1-space">    hConnect </span><span class="pas1-symbol">:=</span><span class="pas1-space"> InternetConnect</span><span class="pas1-symbol">(</span><span class="pas1-identifier">hInet</span><span class="pas1-symbol">,</span><span class="pas1-space"> PChar</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ServerName</span><span class="pas1-symbol">),</span><span class="pas1-space"> INTERNET_DEFAULT_HTTPS_PORT</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-reservedword">nil</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-reservedword">nil</span><span class="pas1-symbol">,</span><span class="pas1-space"> INTERNET_SERVICE_HTTP</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">if</span><span class="pas1-space"> hConnect</span><span class="pas1-symbol">=</span><span class="pas1-reservedword">nil</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">      ErrorCode</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">GetLastError</span><span class="pas1-symbol">;
</span><span class="pas1-space">      </span><span class="pas1-reservedword">raise</span><span class="pas1-space"> Exception</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Format</span><span class="pas1-symbol">(</span><span class="pas1-string">'InternetConnect Error %d Description %s'</span><span class="pas1-symbol">,[</span><span class="pas1-identifier">ErrorCode</span><span class="pas1-symbol">,</span><span class="pas1-identifier">GetWinInetError</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ErrorCode</span><span class="pas1-symbol">)]));
</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space"> 
    </span><span class="pas1-reservedword">try
</span><span class="pas1-space">      </span><span class="pas1-comment">//make the request
</span><span class="pas1-space">      hRequest </span><span class="pas1-symbol">:=</span><span class="pas1-space"> HttpOpenRequest</span><span class="pas1-symbol">(</span><span class="pas1-identifier">hConnect</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'GET'</span><span class="pas1-symbol">,</span><span class="pas1-space"> PChar</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Resource</span><span class="pas1-symbol">),</span><span class="pas1-space"> HTTP_VERSION</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">''</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-reservedword">nil</span><span class="pas1-symbol">,</span><span class="pas1-space"> INTERNET_FLAG_SECURE</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">);
</span><span class="pas1-space">      </span><span class="pas1-reservedword">if</span><span class="pas1-space"> hRequest</span><span class="pas1-symbol">=</span><span class="pas1-reservedword">nil</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">        ErrorCode</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">GetLastError</span><span class="pas1-symbol">;
</span><span class="pas1-space">        </span><span class="pas1-reservedword">raise</span><span class="pas1-space"> Exception</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Format</span><span class="pas1-symbol">(</span><span class="pas1-string">'HttpOpenRequest Error %d Description %s'</span><span class="pas1-symbol">,[</span><span class="pas1-identifier">ErrorCode</span><span class="pas1-symbol">,</span><span class="pas1-identifier">GetWinInetError</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ErrorCode</span><span class="pas1-symbol">)]));
</span><span class="pas1-space">      </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space"> 
      </span><span class="pas1-reservedword">try
</span><span class="pas1-space">        </span><span class="pas1-comment">//send the GET request
</span><span class="pas1-space">        </span><span class="pas1-reservedword">if</span><span class="pas1-space"> </span><span class="pas1-reservedword">not</span><span class="pas1-space"> HttpSendRequest</span><span class="pas1-symbol">(</span><span class="pas1-identifier">hRequest</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-reservedword">nil</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-reservedword">nil</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">          ErrorCode</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">GetLastError</span><span class="pas1-symbol">;
</span><span class="pas1-space">          </span><span class="pas1-reservedword">raise</span><span class="pas1-space"> Exception</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Format</span><span class="pas1-symbol">(</span><span class="pas1-string">'HttpSendRequest Error %d Description %s'</span><span class="pas1-symbol">,[</span><span class="pas1-identifier">ErrorCode</span><span class="pas1-symbol">,</span><span class="pas1-identifier">GetWinInetError</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ErrorCode</span><span class="pas1-symbol">)]));
</span><span class="pas1-space">        </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space"> 
          lpdwBufferLength</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">SizeOf</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Result</span><span class="pas1-symbol">);
</span><span class="pas1-space">          lpdwReserved    </span><span class="pas1-symbol">:=</span><span class="pas1-number">0</span><span class="pas1-symbol">;
</span><span class="pas1-space">          </span><span class="pas1-comment">//get the status code
</span><span class="pas1-space">          </span><span class="pas1-reservedword">if</span><span class="pas1-space"> </span><span class="pas1-reservedword">not</span><span class="pas1-space"> HttpQueryInfo</span><span class="pas1-symbol">(</span><span class="pas1-identifier">hRequest</span><span class="pas1-symbol">,</span><span class="pas1-space"> HTTP_QUERY_STATUS_CODE </span><span class="pas1-reservedword">or</span><span class="pas1-space"> HTTP_QUERY_FLAG_NUMBER</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-symbol">@</span><span class="pas1-identifier">Result</span><span class="pas1-symbol">,</span><span class="pas1-space"> lpdwBufferLength</span><span class="pas1-symbol">,</span><span class="pas1-space"> lpdwReserved</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">            ErrorCode</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">GetLastError</span><span class="pas1-symbol">;
</span><span class="pas1-space">            </span><span class="pas1-reservedword">raise</span><span class="pas1-space"> Exception</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Format</span><span class="pas1-symbol">(</span><span class="pas1-string">'HttpQueryInfo Error %d Description %s'</span><span class="pas1-symbol">,[</span><span class="pas1-identifier">ErrorCode</span><span class="pas1-symbol">,</span><span class="pas1-identifier">GetWinInetError</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ErrorCode</span><span class="pas1-symbol">)]));
</span><span class="pas1-space">          </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space"> 
         </span><span class="pas1-reservedword">if</span><span class="pas1-space"> Result</span><span class="pas1-symbol">=</span><span class="pas1-number">200</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-comment">//read the body response in case which the status code is 200
</span><span class="pas1-space">          </span><span class="pas1-reservedword">if</span><span class="pas1-space"> InternetQueryDataAvailable</span><span class="pas1-symbol">(</span><span class="pas1-identifier">hRequest</span><span class="pas1-symbol">,</span><span class="pas1-space"> lpdwNumberOfBytesAvailable</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">)</span><span class="pas1-space"> </span><span class="pas1-reservedword">then</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">            GetMem</span><span class="pas1-symbol">(</span><span class="pas1-identifier">lpvBuffer</span><span class="pas1-symbol">,</span><span class="pas1-identifier">lpdwBufferLength</span><span class="pas1-symbol">);
</span><span class="pas1-space">            </span><span class="pas1-reservedword">try
</span><span class="pas1-space">              SetLength</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Response</span><span class="pas1-symbol">,</span><span class="pas1-identifier">lpdwNumberOfBytesAvailable</span><span class="pas1-symbol">);
</span><span class="pas1-space">              InternetReadFile</span><span class="pas1-symbol">(</span><span class="pas1-identifier">hRequest</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-symbol">@</span><span class="pas1-identifier">Response</span><span class="pas1-symbol">[</span><span class="pas1-number">1</span><span class="pas1-symbol">],</span><span class="pas1-space"> lpdwNumberOfBytesAvailable</span><span class="pas1-symbol">,</span><span class="pas1-space"> dwBytesRead</span><span class="pas1-symbol">);
</span><span class="pas1-space">            </span><span class="pas1-reservedword">finally
</span><span class="pas1-space">              FreeMem</span><span class="pas1-symbol">(</span><span class="pas1-identifier">lpvBuffer</span><span class="pas1-symbol">);
</span><span class="pas1-space">            </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">          </span><span class="pas1-reservedword">end
</span><span class="pas1-space">          </span><span class="pas1-reservedword">else</span><span class="pas1-space"> </span><span class="pas1-reservedword">begin
</span><span class="pas1-space">            ErrorCode</span><span class="pas1-symbol">:=</span><span class="pas1-identifier">GetLastError</span><span class="pas1-symbol">;
</span><span class="pas1-space">            </span><span class="pas1-reservedword">raise</span><span class="pas1-space"> Exception</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Create</span><span class="pas1-symbol">(</span><span class="pas1-identifier">Format</span><span class="pas1-symbol">(</span><span class="pas1-string">'InternetQueryDataAvailable Error %d Description %s'</span><span class="pas1-symbol">,[</span><span class="pas1-identifier">ErrorCode</span><span class="pas1-symbol">,</span><span class="pas1-identifier">GetWinInetError</span><span class="pas1-symbol">(</span><span class="pas1-identifier">ErrorCode</span><span class="pas1-symbol">)]));
</span><span class="pas1-space">          </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">      </span><span class="pas1-reservedword">finally
</span><span class="pas1-space">        InternetCloseHandle</span><span class="pas1-symbol">(</span><span class="pas1-identifier">hRequest</span><span class="pas1-symbol">);
</span><span class="pas1-space">      </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">    </span><span class="pas1-reservedword">finally
</span><span class="pas1-space">      InternetCloseHandle</span><span class="pas1-symbol">(</span><span class="pas1-identifier">hConnect</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-space">  </span><span class="pas1-reservedword">finally
</span><span class="pas1-space">    InternetCloseHandle</span><span class="pas1-symbol">(</span><span class="pas1-identifier">hInet</span><span class="pas1-symbol">);
</span><span class="pas1-space">  </span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;
</span><span class="pas1-reservedword">end</span><span class="pas1-symbol">;

</span><span class="pas1-space">     RegisterPublishedProperties</span><span class="pas1-symbol">;
</span><span class="pas1-space">     RegisterProperty</span><span class="pas1-symbol">(</span><span class="pas1-string">'Brush'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'TChartBrush'</span><span class="pas1-symbol">,</span><span class="pas1-space"> iptrw</span><span class="pas1-symbol">);
</span><span class="pas1-space">      RegisterProperty</span><span class="pas1-symbol">(</span><span class="pas1-string">'Pen'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'TChartPen'</span><span class="pas1-symbol">,</span><span class="pas1-space"> iptrw</span><span class="pas1-symbol">);
</span><span class="pas1-space">    RegisterProperty</span><span class="pas1-symbol">(</span><span class="pas1-string">'Font'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'TTeeFont'</span><span class="pas1-symbol">,</span><span class="pas1-space"> iptrw</span><span class="pas1-symbol">);
</span><span class="pas1-space">    RegisterProperty</span><span class="pas1-symbol">(</span><span class="pas1-string">'Color'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'TColor'</span><span class="pas1-symbol">,</span><span class="pas1-space"> iptrw</span><span class="pas1-symbol">);
</span><span class="pas1-space">    </span><span class="pas1-comment">//RegisterProperty('Handle', 'TTeeCanvasHandle', iptr);
</span><span class="pas1-space">    RegisterProperty</span><span class="pas1-symbol">(</span><span class="pas1-string">'Gradient'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'TTeeGradient'</span><span class="pas1-symbol">,</span><span class="pas1-space"> iptrw</span><span class="pas1-symbol">);
</span><span class="pas1-space">    RegisterProperty</span><span class="pas1-symbol">(</span><span class="pas1-string">'Picture'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'TBackimage'</span><span class="pas1-symbol">,</span><span class="pas1-space"> iptrw</span><span class="pas1-symbol">);
</span><span class="pas1-space">     RegisterProperty</span><span class="pas1-symbol">(</span><span class="pas1-string">'Shadow'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'TTEEShadow'</span><span class="pas1-symbol">,</span><span class="pas1-space"> iptrw</span><span class="pas1-symbol">);
</span><span class="pas1-space">     RegisterProperty</span><span class="pas1-symbol">(</span><span class="pas1-string">'ShypeStyle'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'TChartObjectShapeStyle'</span><span class="pas1-symbol">,</span><span class="pas1-space"> iptrw</span><span class="pas1-symbol">);
</span><span class="pas1-space">      RegisterProperty</span><span class="pas1-symbol">(</span><span class="pas1-string">'Style'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'TPenStyle'</span><span class="pas1-symbol">,</span><span class="pas1-space"> iptrw</span><span class="pas1-symbol">);
</span><span class="pas1-space">    RegisterProperty</span><span class="pas1-symbol">(</span><span class="pas1-string">'Frame'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'TChartPen'</span><span class="pas1-symbol">,</span><span class="pas1-space"> iptrw</span><span class="pas1-symbol">);
</span><span class="pas1-space">     RegisterProperty</span><span class="pas1-symbol">(</span><span class="pas1-string">'Transparent'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'boolean'</span><span class="pas1-symbol">,</span><span class="pas1-space"> iptrw</span><span class="pas1-symbol">);
</span><span class="pas1-space">    RegisterProperty</span><span class="pas1-symbol">(</span><span class="pas1-string">'Tranparency'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'integer'</span><span class="pas1-symbol">,</span><span class="pas1-space"> iptrw</span><span class="pas1-symbol">);
</span><span class="pas1-space">     RegisterProperty</span><span class="pas1-symbol">(</span><span class="pas1-string">'Visible'</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'boolean'</span><span class="pas1-symbol">,</span><span class="pas1-space"> iptrw</span><span class="pas1-symbol">);
</span><span class="pas1-space">     
     RegisterMethod</span><span class="pas1-symbol">(@</span><span class="pas1-identifier">TCustomAxisPanel</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Destroy</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'Free'</span><span class="pas1-symbol">);
</span><span class="pas1-space">    RegisterMethod</span><span class="pas1-symbol">(@</span><span class="pas1-identifier">TCustomAxisPanel</span><span class="pas1-symbol">.</span><span class="pas1-identifier">Assign</span><span class="pas1-symbol">,</span><span class="pas1-space"> </span><span class="pas1-string">'Assign'</span><span class="pas1-symbol">);
</span><span class="pas1-space">    
     RegisterMethod</span><span class="pas1-symbol">(</span><span class="pas1-string">'Procedure Assign( Source : TPersistent)'</span><span class="pas1-symbol">);
</span><span class="pas1-space">    RegisterMethod</span><span class="pas1-symbol">(</span><span class="pas1-string">'Procedure Free;'</span><span class="pas1-symbol">);


</span><span class="pas1-space"> mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">29</span><span class="pas1-symbol">/</span><span class="pas1-number">08</span><span class="pas1-symbol">/</span><span class="pas1-number">2022</span><span class="pas1-space"> </span><span class="pas1-number">11</span><span class="pas1-symbol">:</span><span class="pas1-number">15</span><span class="pas1-symbol">:</span><span class="pas1-number">20</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-float">1.952</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">42</span><span class="pas1-symbol">%</span><span class="pas1-space"> use
 mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">29</span><span class="pas1-symbol">/</span><span class="pas1-number">08</span><span class="pas1-symbol">/</span><span class="pas1-number">2022</span><span class="pas1-space"> </span><span class="pas1-number">11</span><span class="pas1-symbol">:</span><span class="pas1-number">15</span><span class="pas1-symbol">:</span><span class="pas1-number">33</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-float">1.803</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">42</span><span class="pas1-symbol">%</span><span class="pas1-space"> use
 mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">29</span><span class="pas1-symbol">/</span><span class="pas1-number">08</span><span class="pas1-symbol">/</span><span class="pas1-number">2022</span><span class="pas1-space"> </span><span class="pas1-number">11</span><span class="pas1-symbol">:</span><span class="pas1-number">21</span><span class="pas1-symbol">:</span><span class="pas1-number">34</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-float">1.771</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">42</span><span class="pas1-symbol">%</span><span class="pas1-space"> use
 mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">30</span><span class="pas1-symbol">/</span><span class="pas1-number">08</span><span class="pas1-symbol">/</span><span class="pas1-number">2022</span><span class="pas1-space"> </span><span class="pas1-number">14</span><span class="pas1-symbol">:</span><span class="pas1-number">01</span><span class="pas1-symbol">:</span><span class="pas1-number">29</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-float">2.477</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">45</span><span class="pas1-symbol">%</span><span class="pas1-space"> use  
 mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">30</span><span class="pas1-symbol">/</span><span class="pas1-number">08</span><span class="pas1-symbol">/</span><span class="pas1-number">2022</span><span class="pas1-space"> </span><span class="pas1-number">15</span><span class="pas1-symbol">:</span><span class="pas1-number">43</span><span class="pas1-symbol">:</span><span class="pas1-number">22</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-float">2.406</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">45</span><span class="pas1-symbol">%</span><span class="pas1-space"> use
 mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">30</span><span class="pas1-symbol">/</span><span class="pas1-number">08</span><span class="pas1-symbol">/</span><span class="pas1-number">2022</span><span class="pas1-space"> </span><span class="pas1-number">16</span><span class="pas1-symbol">:</span><span class="pas1-number">07</span><span class="pas1-symbol">:</span><span class="pas1-number">02</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-float">2.369</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">45</span><span class="pas1-symbol">%</span><span class="pas1-space"> use  
 mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">15</span><span class="pas1-symbol">/</span><span class="pas1-number">09</span><span class="pas1-symbol">/</span><span class="pas1-number">2022</span><span class="pas1-space"> </span><span class="pas1-number">09</span><span class="pas1-symbol">:</span><span class="pas1-number">48</span><span class="pas1-symbol">:</span><span class="pas1-number">03</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-float">2.790</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">37</span><span class="pas1-symbol">%</span><span class="pas1-space"> use
 mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">15</span><span class="pas1-symbol">/</span><span class="pas1-number">09</span><span class="pas1-symbol">/</span><span class="pas1-number">2022</span><span class="pas1-space"> </span><span class="pas1-number">22</span><span class="pas1-symbol">:</span><span class="pas1-number">28</span><span class="pas1-symbol">:</span><span class="pas1-number">52</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-float">7.33</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">41</span><span class="pas1-symbol">%</span><span class="pas1-space"> use
 mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">16</span><span class="pas1-symbol">/</span><span class="pas1-number">09</span><span class="pas1-symbol">/</span><span class="pas1-number">2022</span><span class="pas1-space"> </span><span class="pas1-number">14</span><span class="pas1-symbol">:</span><span class="pas1-number">03</span><span class="pas1-symbol">:</span><span class="pas1-number">40</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-float">7.696</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">43</span><span class="pas1-symbol">%</span><span class="pas1-space"> use
 mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">10</span><span class="pas1-symbol">/</span><span class="pas1-number">10</span><span class="pas1-symbol">/</span><span class="pas1-number">2022</span><span class="pas1-space"> </span><span class="pas1-number">16</span><span class="pas1-symbol">:</span><span class="pas1-number">28</span><span class="pas1-symbol">:</span><span class="pas1-number">42</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-float">7.178</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">43</span><span class="pas1-symbol">%</span><span class="pas1-space"> use
 mX4 executed</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">10</span><span class="pas1-symbol">/</span><span class="pas1-number">10</span><span class="pas1-symbol">/</span><span class="pas1-number">2022</span><span class="pas1-space"> </span><span class="pas1-number">16</span><span class="pas1-symbol">:</span><span class="pas1-number">39</span><span class="pas1-symbol">:</span><span class="pas1-number">37</span><span class="pas1-space">  Runtime</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-number">0</span><span class="pas1-symbol">:</span><span class="pas1-float">11.703</span><span class="pas1-space">  Memload</span><span class="pas1-symbol">:</span><span class="pas1-space"> </span><span class="pas1-number">44</span><span class="pas1-symbol">%</span><span class="pas1-space"> use
</span></code></pre><!--EndFragment--></body>
</html>